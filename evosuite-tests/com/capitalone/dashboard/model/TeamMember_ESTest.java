/*
 * This file was automatically generated by EvoSuite
 * Mon Jun 01 13:46:33 GMT 2020
 */

package com.capitalone.dashboard.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.capitalone.dashboard.model.TeamLevelDetails;
import com.capitalone.dashboard.model.TeamMember;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TeamMember_ESTest extends TeamMember_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TeamMember teamMember0 = new TeamMember();
      LinkedList<TeamLevelDetails> linkedList0 = new LinkedList<TeamLevelDetails>();
      TeamLevelDetails teamLevelDetails0 = new TeamLevelDetails();
      linkedList0.add(teamLevelDetails0);
      teamMember0.setTeams(linkedList0);
      teamMember0.getTeams();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TeamMember teamMember0 = new TeamMember();
      teamMember0.setTeamId("py6<.;u/^Wlx0,~B");
      String string0 = teamMember0.getTeamId();
      assertEquals("py6<.;u/^Wlx0,~B", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TeamMember teamMember0 = new TeamMember();
      teamMember0.setRegOrTemp("x");
      String string0 = teamMember0.getRegOrTemp();
      assertEquals("x", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TeamMember teamMember0 = new TeamMember();
      teamMember0.setOrgId("");
      String string0 = teamMember0.getOrgId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TeamMember teamMember0 = new TeamMember();
      teamMember0.setName("");
      String string0 = teamMember0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TeamMember teamMember0 = new TeamMember();
      teamMember0.setAllocation("com.capitalone.dashboard.model.TeamMember");
      String string0 = teamMember0.getAllocation();
      assertEquals("com.capitalone.dashboard.model.TeamMember", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TeamMember teamMember0 = new TeamMember();
      LinkedList<TeamLevelDetails> linkedList0 = new LinkedList<TeamLevelDetails>();
      teamMember0.setTeams(linkedList0);
      List<TeamLevelDetails> list0 = teamMember0.getTeams();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TeamMember teamMember0 = new TeamMember();
      teamMember0.setName("kV(m?pf");
      String string0 = teamMember0.getName();
      assertEquals("kV(m?pf", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TeamMember teamMember0 = new TeamMember();
      String string0 = teamMember0.getTeamId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TeamMember teamMember0 = new TeamMember();
      teamMember0.setRegOrTemp("");
      String string0 = teamMember0.getRegOrTemp();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TeamMember teamMember0 = new TeamMember();
      String string0 = teamMember0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TeamMember teamMember0 = new TeamMember();
      String string0 = teamMember0.getAllocation();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TeamMember teamMember0 = new TeamMember();
      String string0 = teamMember0.getRegOrTemp();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TeamMember teamMember0 = new TeamMember();
      teamMember0.setTeamId("");
      String string0 = teamMember0.getTeamId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TeamMember teamMember0 = new TeamMember();
      teamMember0.setOrgId("kV(m?pf");
      String string0 = teamMember0.getOrgId();
      assertEquals("kV(m?pf", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TeamMember teamMember0 = new TeamMember();
      teamMember0.setAllocation("");
      String string0 = teamMember0.getAllocation();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TeamMember teamMember0 = new TeamMember();
      String string0 = teamMember0.getOrgId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TeamMember teamMember0 = new TeamMember();
      List<TeamLevelDetails> list0 = teamMember0.getTeams();
      assertNull(list0);
  }
}
