/*
 * This file was automatically generated by EvoSuite
 * Mon Jun 01 13:44:49 GMT 2020
 */

package com.capitalone.dashboard.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.capitalone.dashboard.model.TestCase;
import com.capitalone.dashboard.model.TestCaseStatus;
import com.capitalone.dashboard.model.TestSuite;
import com.capitalone.dashboard.model.TestSuiteType;
import java.util.Collection;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TestSuite_ESTest extends TestSuite_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TestSuite testSuite0 = new TestSuite();
      testSuite0.setUnknownStatusCount(2);
      int int0 = testSuite0.getUnknownStatusCount();
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TestSuite testSuite0 = new TestSuite();
      testSuite0.setUnknownStatusCount((-1479));
      int int0 = testSuite0.getUnknownStatusCount();
      assertEquals((-1479), int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TestSuite testSuite0 = new TestSuite();
      testSuite0.setTotalTestCaseCount(1);
      int int0 = testSuite0.getTotalTestCaseCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TestSuite testSuite0 = new TestSuite();
      testSuite0.setTotalTestCaseCount((-1479));
      int int0 = testSuite0.getTotalTestCaseCount();
      assertEquals((-1479), int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TestSuite testSuite0 = new TestSuite();
      testSuite0.setTestCases((Collection<TestCase>) null);
      Collection<TestCase> collection0 = testSuite0.getTestCases();
      assertNull(collection0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TestSuite testSuite0 = new TestSuite();
      testSuite0.setSuccessTestCaseCount(493);
      int int0 = testSuite0.getSuccessTestCaseCount();
      assertEquals(493, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TestSuite testSuite0 = new TestSuite();
      testSuite0.setSuccessTestCaseCount((-762));
      int int0 = testSuite0.getSuccessTestCaseCount();
      assertEquals((-762), int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TestSuite testSuite0 = new TestSuite();
      TestCaseStatus testCaseStatus0 = TestCaseStatus.Success;
      testSuite0.setStatus(testCaseStatus0);
      TestCaseStatus testCaseStatus1 = testSuite0.getStatus();
      assertEquals(TestCaseStatus.Success, testCaseStatus1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TestSuite testSuite0 = new TestSuite();
      testSuite0.setStartTime(415L);
      long long0 = testSuite0.getStartTime();
      assertEquals(415L, long0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TestSuite testSuite0 = new TestSuite();
      testSuite0.setStartTime((-1L));
      long long0 = testSuite0.getStartTime();
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TestSuite testSuite0 = new TestSuite();
      testSuite0.setSkippedTestCaseCount(1);
      int int0 = testSuite0.getSkippedTestCaseCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TestSuite testSuite0 = new TestSuite();
      testSuite0.setSkippedTestCaseCount((-2341));
      int int0 = testSuite0.getSkippedTestCaseCount();
      assertEquals((-2341), int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TestSuite testSuite0 = new TestSuite();
      testSuite0.setId("`:Wb;");
      String string0 = testSuite0.getId();
      assertEquals("`:Wb;", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TestSuite testSuite0 = new TestSuite();
      testSuite0.setId("");
      String string0 = testSuite0.getId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TestSuite testSuite0 = new TestSuite();
      testSuite0.setFailedTestCaseCount((-1));
      int int0 = testSuite0.getFailedTestCaseCount();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TestSuite testSuite0 = new TestSuite();
      testSuite0.setEndTime(1579L);
      long long0 = testSuite0.getEndTime();
      assertEquals(1579L, long0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TestSuite testSuite0 = new TestSuite();
      testSuite0.setEndTime((-1L));
      long long0 = testSuite0.getEndTime();
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TestSuite testSuite0 = new TestSuite();
      testSuite0.setDuration(1);
      long long0 = testSuite0.getDuration();
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TestSuite testSuite0 = new TestSuite();
      testSuite0.setDuration((-1068L));
      long long0 = testSuite0.getDuration();
      assertEquals((-1068L), long0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TestSuite testSuite0 = new TestSuite();
      testSuite0.setDescription("com.capitalone.dashboard.model.TestSuite");
      String string0 = testSuite0.getDescription();
      assertEquals("com.capitalone.dashboard.model.TestSuite", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TestSuite testSuite0 = new TestSuite();
      testSuite0.setDescription("");
      String string0 = testSuite0.getDescription();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TestSuite testSuite0 = new TestSuite();
      testSuite0.getType();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TestSuite testSuite0 = new TestSuite();
      int int0 = testSuite0.getFailedTestCaseCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      TestSuite testSuite0 = new TestSuite();
      testSuite0.getStatus();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      TestSuite testSuite0 = new TestSuite();
      Collection<TestCase> collection0 = testSuite0.getTestCases();
      testSuite0.setTestCases(collection0);
      assertNull(testSuite0.getType());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      TestSuite testSuite0 = new TestSuite();
      String string0 = testSuite0.getId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      TestSuite testSuite0 = new TestSuite();
      long long0 = testSuite0.getEndTime();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      TestSuite testSuite0 = new TestSuite();
      int int0 = testSuite0.getSuccessTestCaseCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      TestSuite testSuite0 = new TestSuite();
      long long0 = testSuite0.getDuration();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      TestSuite testSuite0 = new TestSuite();
      int int0 = testSuite0.getUnknownStatusCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      TestSuite testSuite0 = new TestSuite();
      int int0 = testSuite0.getTotalTestCaseCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      TestSuite testSuite0 = new TestSuite();
      int int0 = testSuite0.getSkippedTestCaseCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      TestSuite testSuite0 = new TestSuite();
      testSuite0.setFailedTestCaseCount(1);
      int int0 = testSuite0.getFailedTestCaseCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      TestSuite testSuite0 = new TestSuite();
      long long0 = testSuite0.getStartTime();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      TestSuite testSuite0 = new TestSuite();
      String string0 = testSuite0.getDescription();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      TestSuite testSuite0 = new TestSuite();
      TestSuiteType testSuiteType0 = TestSuiteType.Unit;
      testSuite0.setType(testSuiteType0);
      TestSuiteType testSuiteType1 = testSuite0.getType();
      assertEquals(TestSuiteType.Unit, testSuiteType1);
  }
}
