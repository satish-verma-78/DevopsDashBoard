/*
 * This file was automatically generated by EvoSuite
 * Mon Jun 01 14:48:29 GMT 2020
 */

package com.capitalone.dashboard.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.capitalone.dashboard.model.PipelineCommit;
import com.capitalone.dashboard.model.SCM;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PipelineCommit_ESTest extends PipelineCommit_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PipelineCommit pipelineCommit0 = new PipelineCommit();
      pipelineCommit0.setTimestamp((-3012L));
      assertEquals((-3012L), pipelineCommit0.getTimestamp());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PipelineCommit pipelineCommit0 = new PipelineCommit(2813L);
      long long0 = pipelineCommit0.getTimestamp();
      assertEquals(2813L, long0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PipelineCommit pipelineCommit0 = new PipelineCommit();
      PipelineCommit pipelineCommit1 = new PipelineCommit(pipelineCommit0, (-95L));
      long long0 = pipelineCommit1.getTimestamp();
      assertEquals((-95L), long0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PipelineCommit pipelineCommit0 = null;
      try {
        pipelineCommit0 = new PipelineCommit((SCM) null, 0L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.capitalone.dashboard.model.SCM", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PipelineCommit pipelineCommit0 = new PipelineCommit();
      pipelineCommit0.scmRevisionNumber = "com.capitalone.dashboazd.model.SCM";
      PipelineCommit pipelineCommit1 = new PipelineCommit(pipelineCommit0, (-95L));
      assertTrue(pipelineCommit1.equals((Object)pipelineCommit0));
      
      pipelineCommit1.setScmRevisionNumber("com.capitalone.dashboard.model.SCM");
      boolean boolean0 = pipelineCommit0.equals(pipelineCommit1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PipelineCommit pipelineCommit0 = new PipelineCommit();
      pipelineCommit0.scmRevisionNumber = "com.capitalone.dashboazd.model.SCM";
      PipelineCommit pipelineCommit1 = new PipelineCommit(pipelineCommit0, (-95L));
      boolean boolean0 = pipelineCommit1.equals(pipelineCommit0);
      assertTrue(boolean0);
      assertEquals((-95L), pipelineCommit1.getTimestamp());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PipelineCommit pipelineCommit0 = new PipelineCommit();
      boolean boolean0 = pipelineCommit0.equals("com.capitalone.dashboazd.model.SCM");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PipelineCommit pipelineCommit0 = new PipelineCommit();
      boolean boolean0 = pipelineCommit0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PipelineCommit pipelineCommit0 = new PipelineCommit();
      boolean boolean0 = pipelineCommit0.equals(pipelineCommit0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PipelineCommit pipelineCommit0 = new PipelineCommit();
      pipelineCommit0.hashCode();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PipelineCommit pipelineCommit0 = new PipelineCommit();
      pipelineCommit0.scmRevisionNumber = "com.capitalone.dashboazd.model.SCM";
      pipelineCommit0.hashCode();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PipelineCommit pipelineCommit0 = new PipelineCommit();
      PipelineCommit pipelineCommit1 = new PipelineCommit(pipelineCommit0, (-95L));
      assertTrue(pipelineCommit1.equals((Object)pipelineCommit0));
      
      pipelineCommit1.setScmRevisionNumber("com.capitalone.dashboard.model.SCM");
      boolean boolean0 = pipelineCommit0.equals(pipelineCommit1);
      assertFalse(pipelineCommit1.equals((Object)pipelineCommit0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PipelineCommit pipelineCommit0 = new PipelineCommit((-2539L));
      PipelineCommit pipelineCommit1 = new PipelineCommit((-2539L));
      boolean boolean0 = pipelineCommit0.equals(pipelineCommit1);
      assertTrue(boolean0);
      assertEquals((-2539L), pipelineCommit1.getTimestamp());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PipelineCommit pipelineCommit0 = new PipelineCommit();
      long long0 = pipelineCommit0.getTimestamp();
      assertEquals(0L, long0);
  }
}
