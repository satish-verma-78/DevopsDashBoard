/*
 * This file was automatically generated by EvoSuite
 * Mon Jun 01 13:52:29 GMT 2020
 */

package com.capitalone.dashboard.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.capitalone.dashboard.model.ServiceStatus;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ServiceStatus_ESTest extends ServiceStatus_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ServiceStatus serviceStatus0 = ServiceStatus.getServiceStatus(400);
      assertEquals(ServiceStatus.Warning, serviceStatus0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ServiceStatus serviceStatus0 = ServiceStatus.getServiceStatus(0);
      assertEquals(ServiceStatus.Alert, serviceStatus0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ServiceStatus serviceStatus0 = ServiceStatus.fromString("Alert");
      assertEquals(ServiceStatus.Alert, serviceStatus0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ServiceStatus[] serviceStatusArray0 = ServiceStatus.values();
      assertEquals(4, serviceStatusArray0.length);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ServiceStatus serviceStatus0 = ServiceStatus.valueOf("Warning");
      assertEquals(ServiceStatus.Warning, serviceStatus0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ServiceStatus serviceStatus0 = ServiceStatus.getServiceStatus(5313);
      assertEquals(ServiceStatus.Alert, serviceStatus0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      // Undeclared exception!
      try { 
        ServiceStatus.fromString("un`uth");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // un`uth is not a valid ServiceStatus.
         //
         verifyException("com.capitalone.dashboard.model.ServiceStatus", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ServiceStatus serviceStatus0 = ServiceStatus.fromString("Unauth");
      assertEquals(ServiceStatus.Unauth, serviceStatus0);
  }
}
