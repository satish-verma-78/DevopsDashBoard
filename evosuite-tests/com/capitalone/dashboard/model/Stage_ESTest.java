/*
 * This file was automatically generated by EvoSuite
 * Mon Jun 01 14:46:37 GMT 2020
 */

package com.capitalone.dashboard.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.capitalone.dashboard.model.PipelineCommit;
import com.capitalone.dashboard.model.Stage;
import java.util.LinkedHashSet;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Stage_ESTest extends Stage_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Stage stage0 = new Stage();
      stage0.setCommits((Set<PipelineCommit>) null);
      Set<PipelineCommit> set0 = stage0.getCommits();
      assertNull(set0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LinkedHashSet<PipelineCommit> linkedHashSet0 = new LinkedHashSet<PipelineCommit>();
      Stage stage0 = new Stage(linkedHashSet0);
      PipelineCommit pipelineCommit0 = new PipelineCommit();
      linkedHashSet0.add(pipelineCommit0);
      Set<PipelineCommit> set0 = stage0.getCommits();
      assertEquals(1, set0.size());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Stage stage0 = new Stage();
      stage0.setCommits((Set<PipelineCommit>) null);
      // Undeclared exception!
      try { 
        stage0.addCommit((PipelineCommit) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.capitalone.dashboard.model.Stage", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Stage stage0 = new Stage();
      stage0.addCommit((PipelineCommit) null);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Stage stage0 = new Stage();
      Set<PipelineCommit> set0 = stage0.getCommits();
      Stage stage1 = new Stage(set0);
      assertFalse(stage1.equals((Object)stage0));
  }
}
