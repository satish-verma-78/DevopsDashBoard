/*
 * This file was automatically generated by EvoSuite
 * Mon Jun 01 14:02:27 GMT 2020
 */

package com.capitalone.dashboard.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.capitalone.dashboard.model.Comment;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Comment_ESTest extends Comment_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Comment comment0 = new Comment();
      comment0.setUserLDAPDN("9p_Gz8\"?xUo");
      String string0 = comment0.getUserLDAPDN();
      assertEquals("9p_Gz8\"?xUo", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Comment comment0 = new Comment();
      comment0.setUserLDAPDN("");
      String string0 = comment0.getUserLDAPDN();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Comment comment0 = new Comment();
      comment0.setUser("W\"Dsm#");
      String string0 = comment0.getUser();
      assertEquals("W\"Dsm#", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Comment comment0 = new Comment();
      comment0.setUser("");
      String string0 = comment0.getUser();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Comment comment0 = new Comment();
      comment0.setUpdatedAt(304L);
      long long0 = comment0.getUpdatedAt();
      assertEquals(304L, long0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Comment comment0 = new Comment();
      comment0.setUpdatedAt((-2532L));
      long long0 = comment0.getUpdatedAt();
      assertEquals((-2532L), long0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Comment comment0 = new Comment();
      comment0.setStatus(",(y/9b/]rYY|}*?G");
      String string0 = comment0.getStatus();
      assertEquals(",(y/9b/]rYY|}*?G", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Comment comment0 = new Comment();
      comment0.setCreatedAt(1424L);
      long long0 = comment0.getCreatedAt();
      assertEquals(1424L, long0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Comment comment0 = new Comment();
      comment0.setCreatedAt((-782L));
      long long0 = comment0.getCreatedAt();
      assertEquals((-782L), long0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Comment comment0 = new Comment();
      comment0.setBody("UTB");
      String string0 = comment0.getBody();
      assertEquals("UTB", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Comment comment0 = new Comment();
      comment0.setBody("");
      String string0 = comment0.getBody();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Comment comment0 = new Comment();
      comment0.setStatus("");
      String string0 = comment0.getStatus();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Comment comment0 = new Comment();
      String string0 = comment0.getBody();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Comment comment0 = new Comment();
      String string0 = comment0.getUserLDAPDN();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Comment comment0 = new Comment();
      String string0 = comment0.getStatus();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Comment comment0 = new Comment();
      long long0 = comment0.getCreatedAt();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Comment comment0 = new Comment();
      long long0 = comment0.getUpdatedAt();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Comment comment0 = new Comment();
      String string0 = comment0.getUser();
      assertNull(string0);
  }
}
