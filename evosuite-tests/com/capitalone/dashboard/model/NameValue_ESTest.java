/*
 * This file was automatically generated by EvoSuite
 * Mon Jun 01 14:33:46 GMT 2020
 */

package com.capitalone.dashboard.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.capitalone.dashboard.model.NameValue;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NameValue_ESTest extends NameValue_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NameValue nameValue0 = new NameValue("P", "P");
      nameValue0.hashCode();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      NameValue nameValue0 = new NameValue();
      nameValue0.setName("P");
      // Undeclared exception!
      try { 
        nameValue0.hashCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.capitalone.dashboard.model.NameValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      NameValue nameValue0 = new NameValue("-G3r]I||38)L3~|N; Q", "-G3r]I||38)L3~|N; Q");
      String string0 = nameValue0.getValue();
      assertEquals("-G3r]I||38)L3~|N; Q", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NameValue nameValue0 = new NameValue("", "");
      String string0 = nameValue0.getValue();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      NameValue nameValue0 = new NameValue("", "");
      nameValue0.setName("`g>;\"15p_.");
      String string0 = nameValue0.getName();
      assertEquals("`g>;\"15p_.", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NameValue nameValue0 = new NameValue("", "");
      String string0 = nameValue0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NameValue nameValue0 = new NameValue("9:", "::");
      NameValue nameValue1 = new NameValue("::", "::");
      boolean boolean0 = nameValue0.equals(nameValue1);
      assertEquals("::", nameValue0.getValue());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NameValue nameValue0 = new NameValue();
      nameValue0.setName("P");
      NameValue nameValue1 = new NameValue("P", "P");
      boolean boolean0 = nameValue1.equals(nameValue0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NameValue nameValue0 = new NameValue();
      boolean boolean0 = nameValue0.equals("P");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      NameValue nameValue0 = new NameValue();
      NameValue nameValue1 = new NameValue("com.capitalone.dashboard.model.NameValue", (String) null);
      // Undeclared exception!
      try { 
        nameValue0.equals(nameValue1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NameValue nameValue0 = new NameValue();
      boolean boolean0 = nameValue0.equals(nameValue0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NameValue nameValue0 = new NameValue();
      boolean boolean0 = nameValue0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      NameValue nameValue0 = new NameValue();
      String string0 = nameValue0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      NameValue nameValue0 = new NameValue();
      String string0 = nameValue0.getValue();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      NameValue nameValue0 = new NameValue();
      nameValue0.setValue((String) null);
      assertNull(nameValue0.getName());
  }
}
