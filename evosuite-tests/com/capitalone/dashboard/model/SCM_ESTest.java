/*
 * This file was automatically generated by EvoSuite
 * Mon Jun 01 14:26:32 GMT 2020
 */

package com.capitalone.dashboard.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.capitalone.dashboard.model.CommitType;
import com.capitalone.dashboard.model.SCM;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SCM_ESTest extends SCM_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CommitType commitType0 = CommitType.New;
      SCM sCM0 = new SCM("", "", "com.capitalone.dashboard.model.SCM", "", (String) null, (String) null, (List<String>) null, 1048L, 0L, commitType0);
      SCM sCM1 = new SCM("ENUM$VALUES", "", "Rmg&Cj$o3_5Lhp'", "DU", "", "mD fcS", (List<String>) null, 0L, 0L, commitType0);
      boolean boolean0 = sCM0.equals(sCM1);
      assertEquals(1048L, sCM0.getScmCommitTimestamp());
      assertEquals(0L, sCM0.getNumberOfChanges());
      assertEquals("", sCM1.getScmBranch());
      assertEquals("DU", sCM1.getScmCommitLog());
      assertEquals("", sCM1.getScmAuthor());
      assertEquals("mD fcS", sCM1.getScmAuthorLogin());
      assertEquals("Rmg&Cj$o3_5Lhp'", sCM1.getScmRevisionNumber());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SCM sCM0 = new SCM();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      sCM0.setFilesRemoved(linkedList0);
      assertNull(sCM0.getScmAuthorLDAPDN());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      CommitType commitType0 = CommitType.NotBuilt;
      SCM sCM0 = new SCM("JtdlZZCP{srxBMx#", (String) null, "", "", "", "#oO6:|'N(K#g9i8t3", linkedList0, 0L, 0L, commitType0);
      List<String> list0 = sCM0.getFilesRemoved();
      assertEquals("", sCM0.getScmCommitLog());
      assertEquals("#oO6:|'N(K#g9i8t3", sCM0.getScmAuthorLogin());
      assertEquals("", sCM0.getScmAuthor());
      assertEquals("", sCM0.getScmRevisionNumber());
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      CommitType commitType0 = CommitType.New;
      SCM sCM0 = new SCM("", "", " is not a valid Commit Type", " is not a valid Commit Type", " is not a valid Commit Type", "", linkedList0, 457L, 457L, commitType0);
      sCM0.setFilesAdded((List<String>) null);
      assertEquals(" is not a valid Commit Type", sCM0.getScmAuthor());
      assertEquals("", sCM0.getScmAuthorLogin());
      assertEquals(457L, sCM0.getScmCommitTimestamp());
      assertEquals(" is not a valid Commit Type", sCM0.getScmRevisionNumber());
      assertEquals(457L, sCM0.getNumberOfChanges());
      assertEquals(" is not a valid Commit Type", sCM0.getScmCommitLog());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      CommitType commitType0 = CommitType.NotBuilt;
      SCM sCM0 = new SCM((String) null, (String) null, (String) null, (String) null, "R=xG`-Psfy-tY+", "lB0$zVgqDmb'P-#5ETY", linkedList0, 0L, 0L, commitType0);
      sCM0.setFilesAdded(linkedList0);
      assertEquals("lB0$zVgqDmb'P-#5ETY", sCM0.getScmAuthorLogin());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SCM sCM0 = new SCM();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      sCM0.setScmParentRevisionNumbers(linkedList0);
      assertNull(sCM0.getPullNumber());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      CommitType commitType0 = CommitType.New;
      SCM sCM0 = new SCM("", "", " is not a valid Commit Type", " is not a valid Commit Type", " is not a valid Commit Type", "", linkedList0, 457L, 457L, commitType0);
      sCM0.setScmBranch("LI_$y_HaLj0(L`}iog");
      assertEquals("LI_$y_HaLj0(L`}iog", sCM0.getScmBranch());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SCM sCM0 = new SCM();
      sCM0.setScmUrl("");
      assertNull(sCM0.getScmAuthorLDAPDN());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CommitType commitType0 = CommitType.New;
      SCM sCM0 = new SCM("O9rC\"qf!JB*Jc7UKU", "O9rC\"qf!JB*Jc7UKU", "O9rC\"qf!JB*Jc7UKU", "O9rC\"qf!JB*Jc7UKU", "O9rC\"qf!JB*Jc7UKU", "O9rC\"qf!JB*Jc7UKU", (List<String>) null, 2077L, 2077L, commitType0);
      sCM0.getType();
      assertEquals(2077L, sCM0.getNumberOfChanges());
      assertEquals(2077L, sCM0.getScmCommitTimestamp());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CommitType commitType0 = CommitType.Merge;
      SCM sCM0 = new SCM("i^QcnIg$W_,['_", "i^QcnIg$W_,['_", "i^QcnIg$W_,['_", "i^QcnIg$W_,['_", "i^QcnIg$W_,['_", "i^QcnIg$W_,['_", (List<String>) null, 427L, 427L, commitType0);
      String string0 = sCM0.getScmUrl();
      assertEquals(427L, sCM0.getNumberOfChanges());
      assertEquals(427L, sCM0.getScmCommitTimestamp());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CommitType commitType0 = CommitType.New;
      SCM sCM0 = new SCM("", "", "", "9hwP[5nIm:]GV9P", "", "9hwP[5nIm:]GV9P", (List<String>) null, 0L, (-1L), commitType0);
      String string0 = sCM0.getScmUrl();
      assertEquals((-1L), sCM0.getNumberOfChanges());
      assertEquals("9hwP[5nIm:]GV9P", sCM0.getScmAuthorLogin());
      assertEquals("9hwP[5nIm:]GV9P", sCM0.getScmCommitLog());
      assertEquals("", sCM0.getScmAuthor());
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      CommitType commitType0 = CommitType.New;
      SCM sCM0 = new SCM("Merge", "Merge", "Merge", "Merge", "'jc7", "Merge", linkedList0, 0L, 0L, commitType0);
      String string0 = sCM0.getScmRevisionNumber();
      assertEquals("'jc7", sCM0.getScmAuthor());
      assertNotNull(string0);
      assertEquals("Merge", string0);
      assertEquals("Merge", sCM0.getScmAuthorLogin());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      CommitType commitType0 = CommitType.New;
      SCM sCM0 = new SCM("", "", "", "", "", "", linkedList0, (-1041L), 1L, commitType0);
      String string0 = sCM0.getScmRevisionNumber();
      assertNotNull(string0);
      assertEquals((-1041L), sCM0.getScmCommitTimestamp());
      assertEquals(1L, sCM0.getNumberOfChanges());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      CommitType commitType0 = CommitType.Merge;
      SCM sCM0 = new SCM("J%Yuv", "J%Yuv", "J%Yuv", "J%Yuv", (String) null, "J%Yuv", linkedList0, 3444L, 3444L, commitType0);
      List<String> list0 = sCM0.getScmParentRevisionNumbers();
      assertEquals(3444L, sCM0.getNumberOfChanges());
      assertEquals(3444L, sCM0.getScmCommitTimestamp());
      assertNotNull(list0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("*`A");
      CommitType commitType0 = CommitType.NotBuilt;
      SCM sCM0 = new SCM((String) null, (String) null, (String) null, (String) null, "R=xG`-Psfy-tY+", "lB0$zVgqDmb'P-#5ETY", linkedList0, 0L, 0L, commitType0);
      List<String> list0 = sCM0.getScmParentRevisionNumbers();
      assertNotNull(list0);
      assertEquals("lB0$zVgqDmb'P-#5ETY", sCM0.getScmAuthorLogin());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SCM sCM0 = new SCM();
      sCM0.scmCommitterLogin = "u[!B-NT-$&$8-pNSaxt";
      String string0 = sCM0.getScmCommitterLogin();
      assertEquals("u[!B-NT-$&$8-pNSaxt", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SCM sCM0 = new SCM();
      sCM0.setScmCommitterLogin("");
      String string0 = sCM0.getScmCommitterLogin();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SCM sCM0 = new SCM();
      sCM0.setScmCommitter("xz~Y|");
      String string0 = sCM0.getScmCommitter();
      assertEquals("xz~Y|", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SCM sCM0 = new SCM();
      sCM0.setScmCommitter("");
      String string0 = sCM0.getScmCommitter();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SCM sCM0 = new SCM();
      long long0 = sCM0.getScmCommitTimestamp();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CommitType commitType0 = CommitType.NotBuilt;
      SCM sCM0 = new SCM("", "", "Yr!zrPEHW(", "Yr!zrPEHW(", "", "", (List<String>) null, 1L, 0L, commitType0);
      long long0 = sCM0.getScmCommitTimestamp();
      assertEquals(1L, long0);
      assertEquals("", sCM0.getScmAuthor());
      assertEquals("Yr!zrPEHW(", sCM0.getScmCommitLog());
      assertEquals("Yr!zrPEHW(", sCM0.getScmRevisionNumber());
      assertEquals(0L, sCM0.getNumberOfChanges());
      assertEquals("", sCM0.getScmAuthorLogin());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SCM sCM0 = new SCM();
      sCM0.setScmCommitLog("ENUM$VALUES");
      String string0 = sCM0.getScmCommitLog();
      assertEquals("ENUM$VALUES", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CommitType commitType0 = CommitType.New;
      SCM sCM0 = new SCM("", "", "com.capitalone.dashboard.model.SCM", "", (String) null, (String) null, (List<String>) null, 1048L, 0L, commitType0);
      String string0 = sCM0.getScmCommitLog();
      assertEquals(1048L, sCM0.getScmCommitTimestamp());
      assertEquals("com.capitalone.dashboard.model.SCM", sCM0.getScmRevisionNumber());
      assertEquals("", string0);
      assertNotNull(string0);
      assertEquals(0L, sCM0.getNumberOfChanges());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SCM sCM0 = new SCM();
      String string0 = sCM0.getScmBranch();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CommitType commitType0 = CommitType.NotBuilt;
      SCM sCM0 = new SCM("", "", "", "}l;8.<+j[5J!l[", "}l;8.<+j[5J!l[", "}l;8.<+j[5J!l[", (List<String>) null, 2627L, (-2594L), commitType0);
      String string0 = sCM0.getScmBranch();
      assertEquals("", string0);
      assertEquals("}l;8.<+j[5J!l[", sCM0.getScmAuthor());
      assertEquals(2627L, sCM0.getScmCommitTimestamp());
      assertEquals("}l;8.<+j[5J!l[", sCM0.getScmCommitLog());
      assertNotNull(string0);
      assertEquals("}l;8.<+j[5J!l[", sCM0.getScmAuthorLogin());
      assertEquals((-2594L), sCM0.getNumberOfChanges());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SCM sCM0 = new SCM();
      String string0 = sCM0.getScmAuthorLogin();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SCM sCM0 = new SCM();
      sCM0.setScmAuthorLDAPDN("B pFgw2S");
      String string0 = sCM0.getScmAuthorLDAPDN();
      assertEquals("B pFgw2S", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SCM sCM0 = new SCM();
      SCM sCM1 = new SCM(sCM0);
      sCM1.scmAuthorLDAPDN = "";
      String string0 = sCM1.getScmAuthorLDAPDN();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SCM sCM0 = new SCM();
      String string0 = sCM0.getScmAuthor();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SCM sCM0 = new SCM();
      sCM0.setScmAuthor(" is not a valid Commit Type");
      String string0 = sCM0.getScmAuthor();
      assertEquals(" is not a valid Commit Type", string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SCM sCM0 = new SCM();
      sCM0.setPullNumber("");
      String string0 = sCM0.getPullNumber();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CommitType commitType0 = CommitType.NotBuilt;
      SCM sCM0 = new SCM("n-aPdY7/m4pP5Tf~d", "", "", "*|,v=DH,,\"", "", "Merge", (List<String>) null, 3859L, 3859L, commitType0);
      long long0 = sCM0.getNumberOfChanges();
      assertEquals(3859L, long0);
      assertEquals("*|,v=DH,,\"", sCM0.getScmCommitLog());
      assertEquals(3859L, sCM0.getScmCommitTimestamp());
      assertEquals("", sCM0.getScmAuthor());
      assertEquals("", sCM0.getScmRevisionNumber());
      assertEquals("Merge", sCM0.getScmAuthorLogin());
      assertEquals("", sCM0.getScmBranch());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CommitType commitType0 = CommitType.New;
      SCM sCM0 = new SCM("", "", "", "9hwP[5nIm:]GV9P", "", "9hwP[5nIm:]GV9P", (List<String>) null, 0L, (-1L), commitType0);
      long long0 = sCM0.getNumberOfChanges();
      assertEquals("9hwP[5nIm:]GV9P", sCM0.getScmCommitLog());
      assertEquals("", sCM0.getScmAuthor());
      assertEquals("9hwP[5nIm:]GV9P", sCM0.getScmAuthorLogin());
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      CommitType commitType0 = CommitType.New;
      SCM sCM0 = new SCM("", "", " is not a valid Commit Type", " is not a valid Commit Type", " is not a valid Commit Type", "", linkedList0, 457L, 457L, commitType0);
      sCM0.setFilesRemoved(linkedList0);
      List<String> list0 = sCM0.getFilesRemoved();
      assertEquals(457L, sCM0.getNumberOfChanges());
      assertEquals(" is not a valid Commit Type", sCM0.getScmCommitLog());
      assertEquals(457L, sCM0.getScmCommitTimestamp());
      assertEquals("", sCM0.getScmAuthorLogin());
      assertNotNull(list0);
      assertEquals(" is not a valid Commit Type", sCM0.getScmAuthor());
      assertEquals(" is not a valid Commit Type", sCM0.getScmRevisionNumber());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("*`A");
      CommitType commitType0 = CommitType.NotBuilt;
      SCM sCM0 = new SCM((String) null, (String) null, (String) null, (String) null, "R=xG`-Psfy-tY+", "lB0$zVgqDmb'P-#5ETY", linkedList0, 0L, 0L, commitType0);
      sCM0.filesRemoved = (List<String>) linkedList0;
      List<String> list0 = sCM0.getFilesRemoved();
      assertNotNull(list0);
      assertEquals("lB0$zVgqDmb'P-#5ETY", sCM0.getScmAuthorLogin());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SCM sCM0 = new SCM();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      sCM0.setFilesModified(linkedList0);
      List<String> list0 = sCM0.getFilesModified();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SCM sCM0 = new SCM();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add((String) null);
      sCM0.setFilesModified(linkedList0);
      List<String> list0 = sCM0.getFilesModified();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SCM sCM0 = new SCM();
      sCM0.filesAdded = null;
      LinkedList<String> linkedList0 = new LinkedList<String>();
      sCM0.filesAdded = (List<String>) linkedList0;
      List<String> list0 = sCM0.getFilesAdded();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      SCM sCM0 = new SCM();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      sCM0.filesAdded = (List<String>) linkedList0;
      linkedList0.push((String) null);
      List<String> list0 = sCM0.getFilesAdded();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      SCM sCM0 = null;
      try {
        sCM0 = new SCM((SCM) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.capitalone.dashboard.model.SCM", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      CommitType commitType0 = CommitType.New;
      SCM sCM0 = new SCM("", "", (String) null, (String) null, "", "", linkedList0, (-1L), (-1L), commitType0);
      long long0 = sCM0.getScmCommitTimestamp();
      assertEquals((-1L), long0);
      assertEquals((-1L), sCM0.getNumberOfChanges());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      CommitType commitType0 = CommitType.New;
      SCM sCM0 = new SCM("yN_n0JoRM@pi", " |YcX@s/C>D(kqLs", " |YcX@s/C>D(kqLs", "yN_n0JoRM@pi", "", "", linkedList0, 1L, 1L, commitType0);
      String string0 = sCM0.getScmAuthor();
      assertEquals("", string0);
      assertEquals("yN_n0JoRM@pi", sCM0.getScmCommitLog());
      assertEquals(" |YcX@s/C>D(kqLs", sCM0.getScmRevisionNumber());
      assertEquals("", sCM0.getScmAuthorLogin());
      assertEquals(" |YcX@s/C>D(kqLs", sCM0.getScmBranch());
      assertEquals(1L, sCM0.getScmCommitTimestamp());
      assertNotNull(string0);
      assertEquals(1L, sCM0.getNumberOfChanges());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      CommitType commitType0 = CommitType.New;
      SCM sCM0 = new SCM("O9rC\"qf!JB*Jc7UKU", "O9rC\"qf!JB*Jc7UKU", "O9rC\"qf!JB*Jc7UKU", "O9rC\"qf!JB*Jc7UKU", "O9rC\"qf!JB*Jc7UKU", "O9rC\"qf!JB*Jc7UKU", (List<String>) null, 2077L, 2077L, commitType0);
      String string0 = sCM0.getScmBranch();
      assertEquals(2077L, sCM0.getScmCommitTimestamp());
      assertNotNull(string0);
      assertEquals(2077L, sCM0.getNumberOfChanges());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      SCM sCM0 = new SCM();
      String string0 = sCM0.getScmCommitLog();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      CommitType commitType0 = CommitType.NotBuilt;
      SCM sCM0 = new SCM((String) null, (String) null, (String) null, (String) null, "R=xG`-Psfy-tY+", "lB0$zVgqDmb'P-#5ETY", linkedList0, 0L, 0L, commitType0);
      String string0 = sCM0.getScmAuthorLogin();
      assertNotNull(string0);
      assertEquals("lB0$zVgqDmb'P-#5ETY", string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      SCM sCM0 = new SCM();
      String string0 = sCM0.getScmRevisionNumber();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      SCM sCM0 = new SCM();
      String string0 = sCM0.getScmUrl();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      SCM sCM0 = new SCM();
      SCM sCM1 = new SCM(sCM0);
      boolean boolean0 = sCM0.equals(sCM1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      SCM sCM0 = new SCM();
      SCM sCM1 = new SCM(sCM0);
      assertTrue(sCM1.equals((Object)sCM0));
      
      sCM1.scmAuthor = "ENUM$VALUES";
      boolean boolean0 = sCM0.equals(sCM1);
      assertFalse(sCM1.equals((Object)sCM0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      SCM sCM0 = new SCM();
      sCM0.setScmCommitLog("C/.7%3;T+fPOE@");
      SCM sCM1 = new SCM();
      boolean boolean0 = sCM0.equals(sCM1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      SCM sCM0 = new SCM();
      SCM sCM1 = new SCM();
      assertTrue(sCM1.equals((Object)sCM0));
      
      sCM1.setScmRevisionNumber("&)`W4;,6$[*Jw%");
      boolean boolean0 = sCM0.equals(sCM1);
      assertFalse(sCM1.equals((Object)sCM0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      SCM sCM0 = new SCM();
      SCM sCM1 = new SCM();
      assertTrue(sCM1.equals((Object)sCM0));
      
      sCM0.scmBranch = ".aeuw";
      boolean boolean0 = sCM1.equals(sCM0);
      assertFalse(sCM1.equals((Object)sCM0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      SCM sCM0 = new SCM();
      SCM sCM1 = new SCM(sCM0);
      assertTrue(sCM1.equals((Object)sCM0));
      
      sCM1.scmUrl = "~ew";
      boolean boolean0 = sCM0.equals(sCM1);
      assertFalse(sCM1.equals((Object)sCM0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      SCM sCM0 = new SCM();
      SCM sCM1 = new SCM(sCM0);
      sCM1.scmCommitTimestamp = (-1261L);
      boolean boolean0 = sCM1.equals(sCM0);
      assertEquals((-1261L), sCM1.getScmCommitTimestamp());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      SCM sCM0 = new SCM();
      Object object0 = new Object();
      boolean boolean0 = sCM0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      SCM sCM0 = new SCM();
      boolean boolean0 = sCM0.equals(sCM0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      SCM sCM0 = new SCM();
      String string0 = sCM0.getScmCommitter();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      SCM sCM0 = new SCM();
      List<String> list0 = sCM0.getScmParentRevisionNumbers();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      SCM sCM0 = new SCM();
      sCM0.setPullNumber(" is not a valid Comit Type");
      String string0 = sCM0.getPullNumber();
      assertEquals(" is not a valid Comit Type", string0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      SCM sCM0 = new SCM();
      long long0 = sCM0.getNumberOfChanges();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      SCM sCM0 = new SCM();
      sCM0.setNumberOfChanges((-49L));
      assertEquals((-49L), sCM0.getNumberOfChanges());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      SCM sCM0 = new SCM();
      CommitType commitType0 = CommitType.Merge;
      sCM0.setType(commitType0);
      assertEquals(0L, sCM0.getNumberOfChanges());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      SCM sCM0 = new SCM();
      String string0 = sCM0.getScmAuthorLDAPDN();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      SCM sCM0 = new SCM();
      String string0 = sCM0.getScmCommitterLogin();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      SCM sCM0 = new SCM();
      SCM sCM1 = new SCM(sCM0);
      assertTrue(sCM1.equals((Object)sCM0));
      
      sCM0.scmAuthorLogin = "";
      boolean boolean0 = sCM1.equals(sCM0);
      assertFalse(sCM1.equals((Object)sCM0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      SCM sCM0 = new SCM();
      List<String> list0 = sCM0.getFilesModified();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      SCM sCM0 = new SCM();
      sCM0.getType();
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      SCM sCM0 = new SCM();
      List<String> list0 = sCM0.getFilesAdded();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      SCM sCM0 = new SCM();
      sCM0.setScmCommitTimestamp(935L);
      assertEquals(935L, sCM0.getScmCommitTimestamp());
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      SCM sCM0 = new SCM();
      String string0 = sCM0.getPullNumber();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      SCM sCM0 = new SCM();
      sCM0.hashCode();
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      SCM sCM0 = new SCM();
      sCM0.setScmAuthorLogin("");
      String string0 = sCM0.getScmAuthorLogin();
      assertEquals("", string0);
  }
}
