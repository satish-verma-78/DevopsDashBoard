/*
 * This file was automatically generated by EvoSuite
 * Mon Jun 01 13:51:08 GMT 2020
 */

package com.capitalone.dashboard.model.score.settings;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.capitalone.dashboard.model.score.settings.DeployScoreSettings;
import com.capitalone.dashboard.model.score.settings.ScoreComponentSettings;
import com.capitalone.dashboard.model.score.settings.ScoreCriteria;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DeployScoreSettings_ESTest extends DeployScoreSettings_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DeployScoreSettings deployScoreSettings0 = new DeployScoreSettings();
      ScoreCriteria scoreCriteria0 = new ScoreCriteria();
      deployScoreSettings0.setCriteria(scoreCriteria0);
      // Undeclared exception!
      try { 
        DeployScoreSettings.cloneDeployScoreSettings(deployScoreSettings0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/collections/CollectionUtils
         //
         verifyException("com.capitalone.dashboard.model.score.settings.ScoreCriteria", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DeployScoreSettings deployScoreSettings0 = new DeployScoreSettings();
      ScoreComponentSettings scoreComponentSettings0 = deployScoreSettings0.getIntancesOnline();
      assertNull(scoreComponentSettings0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DeployScoreSettings deployScoreSettings0 = new DeployScoreSettings();
      deployScoreSettings0.setDeploySuccess(deployScoreSettings0);
      assertFalse(deployScoreSettings0.isDisabled());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DeployScoreSettings deployScoreSettings0 = new DeployScoreSettings();
      deployScoreSettings0.setIntancesOnline(deployScoreSettings0);
      ScoreComponentSettings scoreComponentSettings0 = deployScoreSettings0.getIntancesOnline();
      assertFalse(scoreComponentSettings0.isDisabled());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DeployScoreSettings deployScoreSettings0 = new DeployScoreSettings();
      ScoreComponentSettings scoreComponentSettings0 = deployScoreSettings0.getDeploySuccess();
      assertNull(scoreComponentSettings0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DeployScoreSettings deployScoreSettings0 = DeployScoreSettings.cloneDeployScoreSettings((DeployScoreSettings) null);
      assertNull(deployScoreSettings0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      DeployScoreSettings deployScoreSettings0 = new DeployScoreSettings();
      DeployScoreSettings deployScoreSettings1 = DeployScoreSettings.cloneDeployScoreSettings(deployScoreSettings0);
      assertNotSame(deployScoreSettings1, deployScoreSettings0);
      assertNotNull(deployScoreSettings1);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      DeployScoreSettings deployScoreSettings0 = new DeployScoreSettings();
      String string0 = deployScoreSettings0.toString();
      assertEquals("DeployScoreSettings{deploySuccess=null, intancesOnline=null, disabled=false, weight=0, criteria=null}", string0);
  }
}
