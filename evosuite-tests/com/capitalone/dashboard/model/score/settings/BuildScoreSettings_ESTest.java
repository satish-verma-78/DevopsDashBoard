/*
 * This file was automatically generated by EvoSuite
 * Mon Jun 01 14:28:58 GMT 2020
 */

package com.capitalone.dashboard.model.score.settings;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.capitalone.dashboard.model.score.settings.BuildScoreSettings;
import com.capitalone.dashboard.model.score.settings.ScoreCriteria;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BuildScoreSettings_ESTest extends BuildScoreSettings_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BuildScoreSettings buildScoreSettings0 = new BuildScoreSettings();
      buildScoreSettings0.setNumberOfDays(1372);
      buildScoreSettings0.toString();
      assertEquals(1372, buildScoreSettings0.getNumberOfDays());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BuildScoreSettings.BuildDurationScoreSettings buildScoreSettings_BuildDurationScoreSettings0 = new BuildScoreSettings.BuildDurationScoreSettings();
      buildScoreSettings_BuildDurationScoreSettings0.setDisabled(true);
      BuildScoreSettings buildScoreSettings0 = new BuildScoreSettings();
      buildScoreSettings0.setStatus(buildScoreSettings_BuildDurationScoreSettings0);
      BuildScoreSettings.BuildDurationScoreSettings buildScoreSettings_BuildDurationScoreSettings1 = (BuildScoreSettings.BuildDurationScoreSettings)buildScoreSettings0.getStatus();
      assertEquals(300000L, buildScoreSettings_BuildDurationScoreSettings1.getBuildDurationThresholdInMillis());
      assertEquals(14, buildScoreSettings0.getNumberOfDays());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BuildScoreSettings buildScoreSettings0 = new BuildScoreSettings();
      buildScoreSettings0.setStatus(buildScoreSettings0);
      buildScoreSettings0.setWeight(14);
      BuildScoreSettings buildScoreSettings1 = (BuildScoreSettings)buildScoreSettings0.getStatus();
      assertEquals(14, buildScoreSettings1.getNumberOfDays());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BuildScoreSettings buildScoreSettings0 = new BuildScoreSettings();
      buildScoreSettings0.setWeight((-2889));
      buildScoreSettings0.setStatus(buildScoreSettings0);
      BuildScoreSettings buildScoreSettings1 = (BuildScoreSettings)buildScoreSettings0.getStatus();
      assertEquals(14, buildScoreSettings1.getNumberOfDays());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BuildScoreSettings buildScoreSettings0 = new BuildScoreSettings();
      assertEquals(14, buildScoreSettings0.getNumberOfDays());
      
      buildScoreSettings0.setNumberOfDays(0);
      int int0 = buildScoreSettings0.getNumberOfDays();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BuildScoreSettings buildScoreSettings0 = new BuildScoreSettings();
      assertEquals(14, buildScoreSettings0.getNumberOfDays());
      
      buildScoreSettings0.setNumberOfDays((-1));
      int int0 = buildScoreSettings0.getNumberOfDays();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BuildScoreSettings buildScoreSettings0 = new BuildScoreSettings();
      BuildScoreSettings.BuildDurationScoreSettings buildScoreSettings_BuildDurationScoreSettings0 = new BuildScoreSettings.BuildDurationScoreSettings();
      buildScoreSettings0.setDuration(buildScoreSettings_BuildDurationScoreSettings0);
      buildScoreSettings_BuildDurationScoreSettings0.setDisabled(true);
      BuildScoreSettings.BuildDurationScoreSettings buildScoreSettings_BuildDurationScoreSettings1 = buildScoreSettings0.getDuration();
      assertEquals(300000L, buildScoreSettings_BuildDurationScoreSettings1.getBuildDurationThresholdInMillis());
      assertEquals(14, buildScoreSettings0.getNumberOfDays());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BuildScoreSettings buildScoreSettings0 = new BuildScoreSettings();
      BuildScoreSettings.BuildDurationScoreSettings buildScoreSettings_BuildDurationScoreSettings0 = new BuildScoreSettings.BuildDurationScoreSettings();
      buildScoreSettings_BuildDurationScoreSettings0.setWeight(125);
      buildScoreSettings0.setDuration(buildScoreSettings_BuildDurationScoreSettings0);
      BuildScoreSettings.BuildDurationScoreSettings buildScoreSettings_BuildDurationScoreSettings1 = buildScoreSettings0.getDuration();
      assertEquals(300000L, buildScoreSettings_BuildDurationScoreSettings1.getBuildDurationThresholdInMillis());
      assertEquals(14, buildScoreSettings0.getNumberOfDays());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BuildScoreSettings buildScoreSettings0 = new BuildScoreSettings();
      BuildScoreSettings.BuildDurationScoreSettings buildScoreSettings_BuildDurationScoreSettings0 = new BuildScoreSettings.BuildDurationScoreSettings();
      buildScoreSettings0.setDuration(buildScoreSettings_BuildDurationScoreSettings0);
      buildScoreSettings_BuildDurationScoreSettings0.setWeight((-544));
      BuildScoreSettings.BuildDurationScoreSettings buildScoreSettings_BuildDurationScoreSettings1 = buildScoreSettings0.getDuration();
      assertEquals(300000L, buildScoreSettings_BuildDurationScoreSettings1.getBuildDurationThresholdInMillis());
      assertEquals(14, buildScoreSettings0.getNumberOfDays());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BuildScoreSettings.BuildDurationScoreSettings buildScoreSettings_BuildDurationScoreSettings0 = new BuildScoreSettings.BuildDurationScoreSettings();
      BuildScoreSettings buildScoreSettings0 = new BuildScoreSettings();
      buildScoreSettings0.setDuration(buildScoreSettings_BuildDurationScoreSettings0);
      assertEquals(300000L, buildScoreSettings_BuildDurationScoreSettings0.getBuildDurationThresholdInMillis());
      
      buildScoreSettings_BuildDurationScoreSettings0.setBuildDurationThresholdInMillis(0L);
      buildScoreSettings0.getDuration();
      assertEquals(14, buildScoreSettings0.getNumberOfDays());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BuildScoreSettings buildScoreSettings0 = new BuildScoreSettings();
      BuildScoreSettings.BuildDurationScoreSettings buildScoreSettings_BuildDurationScoreSettings0 = new BuildScoreSettings.BuildDurationScoreSettings();
      buildScoreSettings_BuildDurationScoreSettings0.setBuildDurationThresholdInMillis((-221));
      buildScoreSettings0.setDuration(buildScoreSettings_BuildDurationScoreSettings0);
      assertEquals((-221L), buildScoreSettings_BuildDurationScoreSettings0.getBuildDurationThresholdInMillis());
      
      BuildScoreSettings.BuildDurationScoreSettings buildScoreSettings_BuildDurationScoreSettings1 = buildScoreSettings0.getDuration();
      assertEquals((-221L), buildScoreSettings_BuildDurationScoreSettings1.getBuildDurationThresholdInMillis());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BuildScoreSettings buildScoreSettings0 = new BuildScoreSettings();
      buildScoreSettings0.setDisabled(true);
      BuildScoreSettings buildScoreSettings1 = BuildScoreSettings.cloneBuildScoreSettings(buildScoreSettings0);
      assertTrue(buildScoreSettings1.isDisabled());
      assertNotSame(buildScoreSettings1, buildScoreSettings0);
      assertEquals(14, buildScoreSettings1.getNumberOfDays());
      assertEquals(14, buildScoreSettings0.getNumberOfDays());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BuildScoreSettings buildScoreSettings0 = new BuildScoreSettings();
      buildScoreSettings0.setWeight(1156);
      BuildScoreSettings buildScoreSettings1 = BuildScoreSettings.cloneBuildScoreSettings(buildScoreSettings0);
      assertEquals(1156, buildScoreSettings1.getWeight());
      assertNotSame(buildScoreSettings1, buildScoreSettings0);
      assertEquals(14, buildScoreSettings1.getNumberOfDays());
      assertEquals(14, buildScoreSettings0.getNumberOfDays());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BuildScoreSettings buildScoreSettings0 = new BuildScoreSettings();
      buildScoreSettings0.setWeight((-2407));
      BuildScoreSettings buildScoreSettings1 = BuildScoreSettings.cloneBuildScoreSettings(buildScoreSettings0);
      assertNotSame(buildScoreSettings1, buildScoreSettings0);
      assertEquals(14, buildScoreSettings1.getNumberOfDays());
      assertEquals((-2407), buildScoreSettings1.getWeight());
      assertEquals(14, buildScoreSettings0.getNumberOfDays());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BuildScoreSettings buildScoreSettings0 = new BuildScoreSettings();
      assertEquals(14, buildScoreSettings0.getNumberOfDays());
      
      buildScoreSettings0.setNumberOfDays(0);
      BuildScoreSettings.cloneBuildScoreSettings(buildScoreSettings0);
      assertEquals(0, buildScoreSettings0.getNumberOfDays());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BuildScoreSettings buildScoreSettings0 = new BuildScoreSettings();
      assertEquals(14, buildScoreSettings0.getNumberOfDays());
      
      buildScoreSettings0.setNumberOfDays((-1));
      BuildScoreSettings.cloneBuildScoreSettings(buildScoreSettings0);
      assertEquals((-1), buildScoreSettings0.getNumberOfDays());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BuildScoreSettings buildScoreSettings0 = new BuildScoreSettings();
      ScoreCriteria scoreCriteria0 = new ScoreCriteria();
      buildScoreSettings0.setCriteria(scoreCriteria0);
      // Undeclared exception!
      try { 
        BuildScoreSettings.cloneBuildScoreSettings(buildScoreSettings0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/collections/CollectionUtils
         //
         verifyException("com.capitalone.dashboard.model.score.settings.ScoreCriteria", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BuildScoreSettings.BuildDurationScoreSettings buildScoreSettings_BuildDurationScoreSettings0 = BuildScoreSettings.BuildDurationScoreSettings.cloneBuildDurationScoreSettings((BuildScoreSettings.BuildDurationScoreSettings) null);
      assertNull(buildScoreSettings_BuildDurationScoreSettings0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BuildScoreSettings buildScoreSettings0 = new BuildScoreSettings();
      buildScoreSettings0.getStatus();
      assertEquals(14, buildScoreSettings0.getNumberOfDays());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      BuildScoreSettings buildScoreSettings0 = new BuildScoreSettings();
      buildScoreSettings0.getDuration();
      assertEquals(14, buildScoreSettings0.getNumberOfDays());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BuildScoreSettings buildScoreSettings0 = new BuildScoreSettings();
      int int0 = buildScoreSettings0.getNumberOfDays();
      assertEquals(14, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      BuildScoreSettings.BuildDurationScoreSettings buildScoreSettings_BuildDurationScoreSettings0 = new BuildScoreSettings.BuildDurationScoreSettings();
      long long0 = buildScoreSettings_BuildDurationScoreSettings0.getBuildDurationThresholdInMillis();
      assertEquals(300000L, long0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      BuildScoreSettings buildScoreSettings0 = BuildScoreSettings.cloneBuildScoreSettings((BuildScoreSettings) null);
      assertNull(buildScoreSettings0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      BuildScoreSettings.BuildDurationScoreSettings buildScoreSettings_BuildDurationScoreSettings0 = new BuildScoreSettings.BuildDurationScoreSettings();
      String string0 = buildScoreSettings_BuildDurationScoreSettings0.toString();
      assertEquals("BuildDurationScoreSettings{buildDurationThresholdInMillis=300000, disabled=false, weight=0, criteria=null}", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      BuildScoreSettings.BuildDurationScoreSettings buildScoreSettings_BuildDurationScoreSettings0 = new BuildScoreSettings.BuildDurationScoreSettings();
      BuildScoreSettings.BuildDurationScoreSettings buildScoreSettings_BuildDurationScoreSettings1 = BuildScoreSettings.BuildDurationScoreSettings.cloneBuildDurationScoreSettings(buildScoreSettings_BuildDurationScoreSettings0);
      assertNotSame(buildScoreSettings_BuildDurationScoreSettings1, buildScoreSettings_BuildDurationScoreSettings0);
      assertNotNull(buildScoreSettings_BuildDurationScoreSettings1);
      assertEquals(300000L, buildScoreSettings_BuildDurationScoreSettings1.getBuildDurationThresholdInMillis());
      assertEquals(300000L, buildScoreSettings_BuildDurationScoreSettings0.getBuildDurationThresholdInMillis());
  }
}
