/*
 * This file was automatically generated by EvoSuite
 * Mon Jun 01 13:55:02 GMT 2020
 */

package com.capitalone.dashboard.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.capitalone.dashboard.model.CollectorType;
import com.capitalone.dashboard.model.PerformanceType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PerformanceType_ESTest extends PerformanceType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PerformanceType performanceType0 = PerformanceType.fromString("InfrastructurePerformance");
      assertEquals(PerformanceType.InfrastructurePerformance, performanceType0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PerformanceType[] performanceTypeArray0 = PerformanceType.values();
      assertEquals(2, performanceTypeArray0.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PerformanceType performanceType0 = PerformanceType.valueOf("ApplicationPerformance");
      assertEquals(PerformanceType.ApplicationPerformance, performanceType0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        PerformanceType.fromString("applicationperformancd");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // applicationperformancd is not a valid PerformanceType.
         //
         verifyException("com.capitalone.dashboard.model.PerformanceType", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      PerformanceType performanceType0 = PerformanceType.fromString("ApplicationPerformance");
      CollectorType collectorType0 = performanceType0.collectorType();
      assertEquals(CollectorType.AppPerformance, collectorType0);
  }
}
