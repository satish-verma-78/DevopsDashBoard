/*
 * This file was automatically generated by EvoSuite
 * Mon Jun 01 14:24:56 GMT 2020
 */

package com.capitalone.dashboard.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.capitalone.dashboard.model.AuthType;
import com.capitalone.dashboard.model.Owner;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Owner_ESTest extends Owner_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AuthType authType0 = AuthType.STANDARD;
      Owner owner0 = new Owner("snaCg7R6;gE:M", authType0);
      String string0 = owner0.getUsername();
      assertEquals("snaCg7R6;gE:M", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AuthType authType0 = AuthType.LDAP;
      Owner owner0 = new Owner("", authType0);
      String string0 = owner0.getUsername();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AuthType authType0 = AuthType.APIKEY;
      Owner owner0 = new Owner("Ua)moe(Mq90NM/", authType0);
      AuthType authType1 = owner0.getAuthType();
      assertSame(authType1, authType0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Owner owner0 = new Owner();
      Owner owner1 = new Owner();
      // Undeclared exception!
      try { 
        owner0.equals(owner1);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/builder/EqualsBuilder
         //
         verifyException("com.capitalone.dashboard.model.Owner", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AuthType authType0 = AuthType.LDAP;
      Owner owner0 = new Owner("LD>AP", authType0);
      boolean boolean0 = owner0.equals("LD>AP");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Owner owner0 = new Owner();
      boolean boolean0 = owner0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Owner owner0 = new Owner();
      boolean boolean0 = owner0.equals(owner0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Owner owner0 = new Owner();
      owner0.setUsername((String) null);
      assertNull(owner0.getUsername());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Owner owner0 = new Owner();
      String string0 = owner0.getUsername();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AuthType authType0 = AuthType.LDAP;
      Owner owner0 = new Owner("LD>AP", authType0);
      owner0.setAuthType(authType0);
      assertEquals("LD>AP", owner0.getUsername());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Owner owner0 = new Owner();
      owner0.getAuthType();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Owner owner0 = new Owner();
      // Undeclared exception!
      try { 
        owner0.hashCode();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/builder/HashCodeBuilder
         //
         verifyException("com.capitalone.dashboard.model.Owner", e);
      }
  }
}
