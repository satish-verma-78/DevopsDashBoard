/*
 * This file was automatically generated by EvoSuite
 * Mon Jun 01 13:45:08 GMT 2020
 */

package com.capitalone.dashboard.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.capitalone.dashboard.model.SprintEstimate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SprintEstimate_ESTest extends SprintEstimate_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SprintEstimate sprintEstimate0 = new SprintEstimate();
      sprintEstimate0.setTotalEstimate((-3657));
      int int0 = sprintEstimate0.getTotalEstimate();
      assertEquals((-3657), int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SprintEstimate sprintEstimate0 = new SprintEstimate();
      sprintEstimate0.setOpenEstimate(1);
      int int0 = sprintEstimate0.getOpenEstimate();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SprintEstimate sprintEstimate0 = new SprintEstimate();
      sprintEstimate0.setOpenEstimate((-1655));
      int int0 = sprintEstimate0.getOpenEstimate();
      assertEquals((-1655), int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SprintEstimate sprintEstimate0 = new SprintEstimate();
      sprintEstimate0.setInProgressEstimate(1698);
      int int0 = sprintEstimate0.getInProgressEstimate();
      assertEquals(1698, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SprintEstimate sprintEstimate0 = new SprintEstimate();
      sprintEstimate0.setInProgressEstimate((-1));
      int int0 = sprintEstimate0.getInProgressEstimate();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SprintEstimate sprintEstimate0 = new SprintEstimate();
      sprintEstimate0.setCompleteEstimate(1);
      int int0 = sprintEstimate0.getCompleteEstimate();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SprintEstimate sprintEstimate0 = new SprintEstimate();
      sprintEstimate0.setCompleteEstimate((-245));
      int int0 = sprintEstimate0.getCompleteEstimate();
      assertEquals((-245), int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SprintEstimate sprintEstimate0 = new SprintEstimate();
      int int0 = sprintEstimate0.getTotalEstimate();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SprintEstimate sprintEstimate0 = new SprintEstimate();
      sprintEstimate0.setTotalEstimate(2174);
      int int0 = sprintEstimate0.getTotalEstimate();
      assertEquals(2174, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SprintEstimate sprintEstimate0 = new SprintEstimate();
      int int0 = sprintEstimate0.getCompleteEstimate();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SprintEstimate sprintEstimate0 = new SprintEstimate();
      int int0 = sprintEstimate0.getInProgressEstimate();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SprintEstimate sprintEstimate0 = new SprintEstimate();
      int int0 = sprintEstimate0.getOpenEstimate();
      assertEquals(0, int0);
  }
}
