/*
 * This file was automatically generated by EvoSuite
 * Mon Jun 01 14:32:33 GMT 2020
 */

package com.capitalone.dashboard.model.quality;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.capitalone.dashboard.model.quality.JacocoXmlReport;
import com.capitalone.dashboard.model.quality.QualityVisitor;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JacocoXmlReport_ESTest extends JacocoXmlReport_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JacocoXmlReport jacocoXmlReport0 = new JacocoXmlReport();
      LinkedList<JacocoXmlReport.Counter> linkedList0 = new LinkedList<JacocoXmlReport.Counter>();
      JacocoXmlReport.Counter jacocoXmlReport_Counter0 = new JacocoXmlReport.Counter();
      linkedList0.add(jacocoXmlReport_Counter0);
      jacocoXmlReport0.setCounters(linkedList0);
      List<JacocoXmlReport.Counter> list0 = jacocoXmlReport0.getCounters();
      assertTrue(list0.contains(jacocoXmlReport_Counter0));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JacocoXmlReport jacocoXmlReport0 = new JacocoXmlReport();
      // Undeclared exception!
      try { 
        jacocoXmlReport0.accept((QualityVisitor) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.capitalone.dashboard.model.quality.JacocoXmlReport", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JacocoXmlReport.Counter jacocoXmlReport_Counter0 = new JacocoXmlReport.Counter();
      int int0 = jacocoXmlReport_Counter0.getCovered();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JacocoXmlReport.Counter jacocoXmlReport_Counter0 = new JacocoXmlReport.Counter();
      jacocoXmlReport_Counter0.setCovered(0);
      assertEquals(0, jacocoXmlReport_Counter0.getCovered());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JacocoXmlReport.Counter jacocoXmlReport_Counter0 = new JacocoXmlReport.Counter();
      int int0 = jacocoXmlReport_Counter0.getMissed();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JacocoXmlReport.Counter jacocoXmlReport_Counter0 = new JacocoXmlReport.Counter();
      jacocoXmlReport_Counter0.setMissed(0);
      assertEquals(0, jacocoXmlReport_Counter0.getMissed());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JacocoXmlReport.Counter jacocoXmlReport_Counter0 = new JacocoXmlReport.Counter();
      jacocoXmlReport_Counter0.getType();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JacocoXmlReport.Counter jacocoXmlReport_Counter0 = new JacocoXmlReport.Counter();
      jacocoXmlReport_Counter0.setType((JacocoXmlReport.CounterType) null);
      assertEquals(0, jacocoXmlReport_Counter0.getMissed());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JacocoXmlReport jacocoXmlReport0 = new JacocoXmlReport();
      QualityVisitor<String> qualityVisitor0 = (QualityVisitor<String>) mock(QualityVisitor.class, new ViolatedAssumptionAnswer());
      jacocoXmlReport0.accept(qualityVisitor0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JacocoXmlReport jacocoXmlReport0 = new JacocoXmlReport();
      LinkedList<JacocoXmlReport.Counter> linkedList0 = new LinkedList<JacocoXmlReport.Counter>();
      jacocoXmlReport0.setCounters(linkedList0);
      List<JacocoXmlReport.Counter> list0 = jacocoXmlReport0.getCounters();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JacocoXmlReport jacocoXmlReport0 = new JacocoXmlReport();
      List<JacocoXmlReport.Counter> list0 = jacocoXmlReport0.getCounters();
      assertNull(list0);
  }
}
