/*
 * This file was automatically generated by EvoSuite
 * Mon Jun 01 13:56:31 GMT 2020
 */

package com.capitalone.dashboard.model.quality;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.capitalone.dashboard.model.quality.PmdReport;
import com.capitalone.dashboard.model.quality.QualityVisitor;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PmdReport_ESTest extends PmdReport_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PmdReport pmdReport0 = new PmdReport();
      QualityVisitor<String> qualityVisitor0 = (QualityVisitor<String>) mock(QualityVisitor.class, new ViolatedAssumptionAnswer());
      pmdReport0.accept(qualityVisitor0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PmdReport pmdReport0 = new PmdReport();
      LinkedList<PmdReport.PmdFile> linkedList0 = new LinkedList<PmdReport.PmdFile>();
      pmdReport0.setFiles(linkedList0);
      List<PmdReport.PmdFile> list0 = pmdReport0.getFiles();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PmdReport pmdReport0 = new PmdReport();
      LinkedList<PmdReport.PmdFile> linkedList0 = new LinkedList<PmdReport.PmdFile>();
      PmdReport.PmdFile pmdReport_PmdFile0 = new PmdReport.PmdFile();
      linkedList0.add(pmdReport_PmdFile0);
      pmdReport0.setFiles(linkedList0);
      List<PmdReport.PmdFile> list0 = pmdReport0.getFiles();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PmdReport.PmdViolation pmdReport_PmdViolation0 = new PmdReport.PmdViolation();
      pmdReport_PmdViolation0.setPriority(0);
      assertEquals(0, pmdReport_PmdViolation0.getPriority());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      PmdReport.PmdViolation pmdReport_PmdViolation0 = new PmdReport.PmdViolation();
      int int0 = pmdReport_PmdViolation0.getPriority();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      PmdReport.PmdFile pmdReport_PmdFile0 = new PmdReport.PmdFile();
      List<PmdReport.PmdViolation> list0 = pmdReport_PmdFile0.getViolations();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      PmdReport.PmdFile pmdReport_PmdFile0 = new PmdReport.PmdFile();
      pmdReport_PmdFile0.setViolations((List<PmdReport.PmdViolation>) null);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      PmdReport pmdReport0 = new PmdReport();
      List<PmdReport.PmdFile> list0 = pmdReport0.getFiles();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      PmdReport pmdReport0 = new PmdReport();
      // Undeclared exception!
      try { 
        pmdReport0.accept((QualityVisitor) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.capitalone.dashboard.model.quality.PmdReport", e);
      }
  }
}
