/*
 * This file was automatically generated by EvoSuite
 * Mon Jun 01 13:20:22 GMT 2020
 */

package com.capitalone.dashboard.response;

import org.junit.Test;
import static org.junit.Assert.*;
import com.capitalone.dashboard.response.CloudVolumeAggregatedResponse;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CloudVolumeAggregatedResponse_ESTest extends CloudVolumeAggregatedResponse_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CloudVolumeAggregatedResponse cloudVolumeAggregatedResponse0 = new CloudVolumeAggregatedResponse();
      cloudVolumeAggregatedResponse0.setTotalCount(2402);
      int int0 = cloudVolumeAggregatedResponse0.getTotalCount();
      assertEquals(2402, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CloudVolumeAggregatedResponse cloudVolumeAggregatedResponse0 = new CloudVolumeAggregatedResponse();
      cloudVolumeAggregatedResponse0.setNonTaggedCount(1846);
      int int0 = cloudVolumeAggregatedResponse0.getNonTaggedCount();
      assertEquals(1846, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CloudVolumeAggregatedResponse cloudVolumeAggregatedResponse0 = new CloudVolumeAggregatedResponse();
      cloudVolumeAggregatedResponse0.setNonTaggedCount((-118));
      int int0 = cloudVolumeAggregatedResponse0.getNonTaggedCount();
      assertEquals((-118), int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CloudVolumeAggregatedResponse cloudVolumeAggregatedResponse0 = new CloudVolumeAggregatedResponse();
      cloudVolumeAggregatedResponse0.setNonEncryptedCount(560);
      int int0 = cloudVolumeAggregatedResponse0.getNonEncryptedCount();
      assertEquals(560, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CloudVolumeAggregatedResponse cloudVolumeAggregatedResponse0 = new CloudVolumeAggregatedResponse();
      cloudVolumeAggregatedResponse0.setNonEncryptedCount((-118));
      int int0 = cloudVolumeAggregatedResponse0.getNonEncryptedCount();
      assertEquals((-118), int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CloudVolumeAggregatedResponse cloudVolumeAggregatedResponse0 = new CloudVolumeAggregatedResponse();
      cloudVolumeAggregatedResponse0.setNoAttachmentCount(1326);
      int int0 = cloudVolumeAggregatedResponse0.getNoAttachmentCount();
      assertEquals(1326, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CloudVolumeAggregatedResponse cloudVolumeAggregatedResponse0 = new CloudVolumeAggregatedResponse();
      cloudVolumeAggregatedResponse0.setNoAttachmentCount((-3340));
      int int0 = cloudVolumeAggregatedResponse0.getNoAttachmentCount();
      assertEquals((-3340), int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CloudVolumeAggregatedResponse cloudVolumeAggregatedResponse0 = new CloudVolumeAggregatedResponse();
      cloudVolumeAggregatedResponse0.setNoAccountCount(349);
      int int0 = cloudVolumeAggregatedResponse0.getNoAccountCount();
      assertEquals(349, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CloudVolumeAggregatedResponse cloudVolumeAggregatedResponse0 = new CloudVolumeAggregatedResponse();
      cloudVolumeAggregatedResponse0.setNoAccountCount((-192));
      int int0 = cloudVolumeAggregatedResponse0.getNoAccountCount();
      assertEquals((-192), int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CloudVolumeAggregatedResponse cloudVolumeAggregatedResponse0 = new CloudVolumeAggregatedResponse();
      cloudVolumeAggregatedResponse0.setLastUpdated(15L);
      long long0 = cloudVolumeAggregatedResponse0.getLastUpdated();
      assertEquals(15L, long0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CloudVolumeAggregatedResponse cloudVolumeAggregatedResponse0 = new CloudVolumeAggregatedResponse();
      cloudVolumeAggregatedResponse0.setLastUpdated((-1L));
      long long0 = cloudVolumeAggregatedResponse0.getLastUpdated();
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CloudVolumeAggregatedResponse cloudVolumeAggregatedResponse0 = new CloudVolumeAggregatedResponse();
      long long0 = cloudVolumeAggregatedResponse0.getLastUpdated();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CloudVolumeAggregatedResponse cloudVolumeAggregatedResponse0 = new CloudVolumeAggregatedResponse();
      cloudVolumeAggregatedResponse0.setTotalCount((-646));
      int int0 = cloudVolumeAggregatedResponse0.getTotalCount();
      assertEquals((-646), int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CloudVolumeAggregatedResponse cloudVolumeAggregatedResponse0 = new CloudVolumeAggregatedResponse();
      int int0 = cloudVolumeAggregatedResponse0.getNoAttachmentCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CloudVolumeAggregatedResponse cloudVolumeAggregatedResponse0 = new CloudVolumeAggregatedResponse();
      int int0 = cloudVolumeAggregatedResponse0.getNonTaggedCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CloudVolumeAggregatedResponse cloudVolumeAggregatedResponse0 = new CloudVolumeAggregatedResponse();
      int int0 = cloudVolumeAggregatedResponse0.getNonEncryptedCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CloudVolumeAggregatedResponse cloudVolumeAggregatedResponse0 = new CloudVolumeAggregatedResponse();
      int int0 = cloudVolumeAggregatedResponse0.getNoAccountCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CloudVolumeAggregatedResponse cloudVolumeAggregatedResponse0 = new CloudVolumeAggregatedResponse();
      int int0 = cloudVolumeAggregatedResponse0.getTotalCount();
      assertEquals(0, int0);
  }
}
