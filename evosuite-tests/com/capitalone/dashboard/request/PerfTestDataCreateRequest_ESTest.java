/*
 * This file was automatically generated by EvoSuite
 * Mon Jun 01 13:04:01 GMT 2020
 */

package com.capitalone.dashboard.request;

import org.junit.Test;
import static org.junit.Assert.*;
import com.capitalone.dashboard.model.TestCapability;
import com.capitalone.dashboard.model.TestSuiteType;
import com.capitalone.dashboard.request.PerfTestDataCreateRequest;
import java.util.Collection;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PerfTestDataCreateRequest_ESTest extends PerfTestDataCreateRequest_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PerfTestDataCreateRequest perfTestDataCreateRequest0 = new PerfTestDataCreateRequest();
      perfTestDataCreateRequest0.setUnknownStatusCount(2);
      int int0 = perfTestDataCreateRequest0.getUnknownStatusCount();
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PerfTestDataCreateRequest perfTestDataCreateRequest0 = new PerfTestDataCreateRequest();
      perfTestDataCreateRequest0.setUnknownStatusCount((-52));
      int int0 = perfTestDataCreateRequest0.getUnknownStatusCount();
      assertEquals((-52), int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PerfTestDataCreateRequest perfTestDataCreateRequest0 = new PerfTestDataCreateRequest();
      TestSuiteType testSuiteType0 = TestSuiteType.Unit;
      perfTestDataCreateRequest0.setType(testSuiteType0);
      TestSuiteType testSuiteType1 = perfTestDataCreateRequest0.getType();
      assertEquals(TestSuiteType.Unit, testSuiteType1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PerfTestDataCreateRequest perfTestDataCreateRequest0 = new PerfTestDataCreateRequest();
      perfTestDataCreateRequest0.setTotalCount(1);
      int int0 = perfTestDataCreateRequest0.getTotalCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PerfTestDataCreateRequest perfTestDataCreateRequest0 = new PerfTestDataCreateRequest();
      perfTestDataCreateRequest0.setTotalCount((-1));
      int int0 = perfTestDataCreateRequest0.getTotalCount();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PerfTestDataCreateRequest perfTestDataCreateRequest0 = new PerfTestDataCreateRequest();
      perfTestDataCreateRequest0.setTimestamp(2613L);
      long long0 = perfTestDataCreateRequest0.getTimestamp();
      assertEquals(2613L, long0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PerfTestDataCreateRequest perfTestDataCreateRequest0 = new PerfTestDataCreateRequest();
      perfTestDataCreateRequest0.setTimestamp((-638L));
      long long0 = perfTestDataCreateRequest0.getTimestamp();
      assertEquals((-638L), long0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PerfTestDataCreateRequest perfTestDataCreateRequest0 = new PerfTestDataCreateRequest();
      perfTestDataCreateRequest0.setTestName("Ge$)");
      String string0 = perfTestDataCreateRequest0.getTestName();
      assertEquals("Ge$)", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PerfTestDataCreateRequest perfTestDataCreateRequest0 = new PerfTestDataCreateRequest();
      perfTestDataCreateRequest0.setTestName("");
      String string0 = perfTestDataCreateRequest0.getTestName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PerfTestDataCreateRequest perfTestDataCreateRequest0 = new PerfTestDataCreateRequest();
      perfTestDataCreateRequest0.setTestCapabilities((Collection<TestCapability>) null);
      Collection<TestCapability> collection0 = perfTestDataCreateRequest0.getTestCapabilities();
      assertNull(collection0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PerfTestDataCreateRequest perfTestDataCreateRequest0 = new PerfTestDataCreateRequest();
      perfTestDataCreateRequest0.setTargetEnvName("G");
      String string0 = perfTestDataCreateRequest0.getTargetEnvName();
      assertEquals("G", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PerfTestDataCreateRequest perfTestDataCreateRequest0 = new PerfTestDataCreateRequest();
      perfTestDataCreateRequest0.setTargetEnvName("");
      String string0 = perfTestDataCreateRequest0.getTargetEnvName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PerfTestDataCreateRequest perfTestDataCreateRequest0 = new PerfTestDataCreateRequest();
      perfTestDataCreateRequest0.setTargetAppName("H|+>bA'i9WP=b&A");
      String string0 = perfTestDataCreateRequest0.getTargetAppName();
      assertEquals("H|+>bA'i9WP=b&A", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PerfTestDataCreateRequest perfTestDataCreateRequest0 = new PerfTestDataCreateRequest();
      perfTestDataCreateRequest0.setTargetAppName("");
      String string0 = perfTestDataCreateRequest0.getTargetAppName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PerfTestDataCreateRequest perfTestDataCreateRequest0 = new PerfTestDataCreateRequest();
      perfTestDataCreateRequest0.setSuccessCount(835);
      int int0 = perfTestDataCreateRequest0.getSuccessCount();
      assertEquals(835, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PerfTestDataCreateRequest perfTestDataCreateRequest0 = new PerfTestDataCreateRequest();
      perfTestDataCreateRequest0.setSuccessCount((-627));
      int int0 = perfTestDataCreateRequest0.getSuccessCount();
      assertEquals((-627), int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PerfTestDataCreateRequest perfTestDataCreateRequest0 = new PerfTestDataCreateRequest();
      perfTestDataCreateRequest0.setStartTime(2277L);
      long long0 = perfTestDataCreateRequest0.getStartTime();
      assertEquals(2277L, long0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PerfTestDataCreateRequest perfTestDataCreateRequest0 = new PerfTestDataCreateRequest();
      perfTestDataCreateRequest0.setStartTime((-3722L));
      long long0 = perfTestDataCreateRequest0.getStartTime();
      assertEquals((-3722L), long0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PerfTestDataCreateRequest perfTestDataCreateRequest0 = new PerfTestDataCreateRequest();
      perfTestDataCreateRequest0.setSkippedCount(1);
      int int0 = perfTestDataCreateRequest0.getSkippedCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PerfTestDataCreateRequest perfTestDataCreateRequest0 = new PerfTestDataCreateRequest();
      perfTestDataCreateRequest0.setSkippedCount((-171));
      int int0 = perfTestDataCreateRequest0.getSkippedCount();
      assertEquals((-171), int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PerfTestDataCreateRequest perfTestDataCreateRequest0 = new PerfTestDataCreateRequest();
      perfTestDataCreateRequest0.setRunId("Functional");
      String string0 = perfTestDataCreateRequest0.getRunId();
      assertEquals("Functional", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PerfTestDataCreateRequest perfTestDataCreateRequest0 = new PerfTestDataCreateRequest();
      perfTestDataCreateRequest0.setRunId("");
      String string0 = perfTestDataCreateRequest0.getRunId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      PerfTestDataCreateRequest perfTestDataCreateRequest0 = new PerfTestDataCreateRequest();
      perfTestDataCreateRequest0.setResultStatus("Unit");
      String string0 = perfTestDataCreateRequest0.getResultStatus();
      assertEquals("Unit", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PerfTestDataCreateRequest perfTestDataCreateRequest0 = new PerfTestDataCreateRequest();
      perfTestDataCreateRequest0.setReportUrl("com.capitalone.dashboard.model.TestSuiteType");
      String string0 = perfTestDataCreateRequest0.getReportUrl();
      assertEquals("com.capitalone.dashboard.model.TestSuiteType", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PerfTestDataCreateRequest perfTestDataCreateRequest0 = new PerfTestDataCreateRequest();
      perfTestDataCreateRequest0.setReportUrl("");
      String string0 = perfTestDataCreateRequest0.getReportUrl();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      PerfTestDataCreateRequest perfTestDataCreateRequest0 = new PerfTestDataCreateRequest();
      perfTestDataCreateRequest0.setPerfTool(")Use'/gj<=PUD+vth ");
      String string0 = perfTestDataCreateRequest0.getPerfTool();
      assertEquals(")Use'/gj<=PUD+vth ", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      PerfTestDataCreateRequest perfTestDataCreateRequest0 = new PerfTestDataCreateRequest();
      perfTestDataCreateRequest0.setPerfTool("");
      String string0 = perfTestDataCreateRequest0.getPerfTool();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      PerfTestDataCreateRequest perfTestDataCreateRequest0 = new PerfTestDataCreateRequest();
      perfTestDataCreateRequest0.setPerfRisk("com.capitalone.dashboard.request.PerfTestDataCreateRequest");
      String string0 = perfTestDataCreateRequest0.getPerfRisk();
      assertEquals("com.capitalone.dashboard.request.PerfTestDataCreateRequest", string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      PerfTestDataCreateRequest perfTestDataCreateRequest0 = new PerfTestDataCreateRequest();
      perfTestDataCreateRequest0.setInstanceUrl("Ux13#XQIp/)Uxy>m");
      String string0 = perfTestDataCreateRequest0.getInstanceUrl();
      assertEquals("Ux13#XQIp/)Uxy>m", string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      PerfTestDataCreateRequest perfTestDataCreateRequest0 = new PerfTestDataCreateRequest();
      perfTestDataCreateRequest0.setFailureCount(1454);
      int int0 = perfTestDataCreateRequest0.getFailureCount();
      assertEquals(1454, int0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      PerfTestDataCreateRequest perfTestDataCreateRequest0 = new PerfTestDataCreateRequest();
      perfTestDataCreateRequest0.setFailureCount((-91));
      int int0 = perfTestDataCreateRequest0.getFailureCount();
      assertEquals((-91), int0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      PerfTestDataCreateRequest perfTestDataCreateRequest0 = new PerfTestDataCreateRequest();
      perfTestDataCreateRequest0.setEndTime(1353L);
      long long0 = perfTestDataCreateRequest0.getEndTime();
      assertEquals(1353L, long0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      PerfTestDataCreateRequest perfTestDataCreateRequest0 = new PerfTestDataCreateRequest();
      perfTestDataCreateRequest0.setEndTime((-788L));
      long long0 = perfTestDataCreateRequest0.getEndTime();
      assertEquals((-788L), long0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      PerfTestDataCreateRequest perfTestDataCreateRequest0 = new PerfTestDataCreateRequest();
      perfTestDataCreateRequest0.setDuration(270L);
      long long0 = perfTestDataCreateRequest0.getDuration();
      assertEquals(270L, long0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      PerfTestDataCreateRequest perfTestDataCreateRequest0 = new PerfTestDataCreateRequest();
      perfTestDataCreateRequest0.setDuration((-2662L));
      long long0 = perfTestDataCreateRequest0.getDuration();
      assertEquals((-2662L), long0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      PerfTestDataCreateRequest perfTestDataCreateRequest0 = new PerfTestDataCreateRequest();
      perfTestDataCreateRequest0.setDescription("");
      String string0 = perfTestDataCreateRequest0.getDescription();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      PerfTestDataCreateRequest perfTestDataCreateRequest0 = new PerfTestDataCreateRequest();
      String string0 = perfTestDataCreateRequest0.getPerfTool();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      PerfTestDataCreateRequest perfTestDataCreateRequest0 = new PerfTestDataCreateRequest();
      long long0 = perfTestDataCreateRequest0.getDuration();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      PerfTestDataCreateRequest perfTestDataCreateRequest0 = new PerfTestDataCreateRequest();
      long long0 = perfTestDataCreateRequest0.getStartTime();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      PerfTestDataCreateRequest perfTestDataCreateRequest0 = new PerfTestDataCreateRequest();
      Object object0 = perfTestDataCreateRequest0.getBuildArtifact();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      PerfTestDataCreateRequest perfTestDataCreateRequest0 = new PerfTestDataCreateRequest();
      String string0 = perfTestDataCreateRequest0.getPerfRisk();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      PerfTestDataCreateRequest perfTestDataCreateRequest0 = new PerfTestDataCreateRequest();
      String string0 = perfTestDataCreateRequest0.getTargetAppName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      PerfTestDataCreateRequest perfTestDataCreateRequest0 = new PerfTestDataCreateRequest();
      String string0 = perfTestDataCreateRequest0.getDescription();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      PerfTestDataCreateRequest perfTestDataCreateRequest0 = new PerfTestDataCreateRequest();
      perfTestDataCreateRequest0.getType();
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      PerfTestDataCreateRequest perfTestDataCreateRequest0 = new PerfTestDataCreateRequest();
      perfTestDataCreateRequest0.setBuildArtifact("");
      Object object0 = perfTestDataCreateRequest0.getBuildArtifact();
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      PerfTestDataCreateRequest perfTestDataCreateRequest0 = new PerfTestDataCreateRequest();
      int int0 = perfTestDataCreateRequest0.getTotalCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      PerfTestDataCreateRequest perfTestDataCreateRequest0 = new PerfTestDataCreateRequest();
      long long0 = perfTestDataCreateRequest0.getTimestamp();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      PerfTestDataCreateRequest perfTestDataCreateRequest0 = new PerfTestDataCreateRequest();
      int int0 = perfTestDataCreateRequest0.getSuccessCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      PerfTestDataCreateRequest perfTestDataCreateRequest0 = new PerfTestDataCreateRequest();
      int int0 = perfTestDataCreateRequest0.getUnknownStatusCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      PerfTestDataCreateRequest perfTestDataCreateRequest0 = new PerfTestDataCreateRequest();
      String string0 = perfTestDataCreateRequest0.getTestName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      PerfTestDataCreateRequest perfTestDataCreateRequest0 = new PerfTestDataCreateRequest();
      String string0 = perfTestDataCreateRequest0.getRunId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      PerfTestDataCreateRequest perfTestDataCreateRequest0 = new PerfTestDataCreateRequest();
      String string0 = perfTestDataCreateRequest0.getInstanceUrl();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      PerfTestDataCreateRequest perfTestDataCreateRequest0 = new PerfTestDataCreateRequest();
      String string0 = perfTestDataCreateRequest0.getReportUrl();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      PerfTestDataCreateRequest perfTestDataCreateRequest0 = new PerfTestDataCreateRequest();
      perfTestDataCreateRequest0.setInstanceUrl("");
      String string0 = perfTestDataCreateRequest0.getInstanceUrl();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      PerfTestDataCreateRequest perfTestDataCreateRequest0 = new PerfTestDataCreateRequest();
      String string0 = perfTestDataCreateRequest0.getResultStatus();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      PerfTestDataCreateRequest perfTestDataCreateRequest0 = new PerfTestDataCreateRequest();
      int int0 = perfTestDataCreateRequest0.getSkippedCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      PerfTestDataCreateRequest perfTestDataCreateRequest0 = new PerfTestDataCreateRequest();
      perfTestDataCreateRequest0.setResultStatus("");
      String string0 = perfTestDataCreateRequest0.getResultStatus();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      PerfTestDataCreateRequest perfTestDataCreateRequest0 = new PerfTestDataCreateRequest();
      int int0 = perfTestDataCreateRequest0.getFailureCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      PerfTestDataCreateRequest perfTestDataCreateRequest0 = new PerfTestDataCreateRequest();
      long long0 = perfTestDataCreateRequest0.getEndTime();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      PerfTestDataCreateRequest perfTestDataCreateRequest0 = new PerfTestDataCreateRequest();
      perfTestDataCreateRequest0.setDescription("com.capitalone.dashboard.request.PerfTestDataCreateRequest");
      String string0 = perfTestDataCreateRequest0.getDescription();
      assertEquals("com.capitalone.dashboard.request.PerfTestDataCreateRequest", string0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      PerfTestDataCreateRequest perfTestDataCreateRequest0 = new PerfTestDataCreateRequest();
      perfTestDataCreateRequest0.setPerfRisk("");
      String string0 = perfTestDataCreateRequest0.getPerfRisk();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      PerfTestDataCreateRequest perfTestDataCreateRequest0 = new PerfTestDataCreateRequest();
      String string0 = perfTestDataCreateRequest0.getTargetEnvName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      PerfTestDataCreateRequest perfTestDataCreateRequest0 = new PerfTestDataCreateRequest();
      Collection<TestCapability> collection0 = perfTestDataCreateRequest0.getTestCapabilities();
      perfTestDataCreateRequest0.setTestCapabilities(collection0);
      assertEquals(0, perfTestDataCreateRequest0.getSkippedCount());
  }
}
