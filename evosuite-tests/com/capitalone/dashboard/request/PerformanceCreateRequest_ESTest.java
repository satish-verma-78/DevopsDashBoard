/*
 * This file was automatically generated by EvoSuite
 * Mon Jun 01 13:01:03 GMT 2020
 */

package com.capitalone.dashboard.request;

import org.junit.Test;
import static org.junit.Assert.*;
import com.capitalone.dashboard.model.CollectorType;
import com.capitalone.dashboard.model.PerformanceType;
import com.capitalone.dashboard.request.PerformanceCreateRequest;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PerformanceCreateRequest_ESTest extends PerformanceCreateRequest_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PerformanceCreateRequest performanceCreateRequest0 = new PerformanceCreateRequest();
      performanceCreateRequest0.setTimestamp(2434L);
      long long0 = performanceCreateRequest0.getTimestamp();
      assertEquals(2434L, long0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PerformanceCreateRequest performanceCreateRequest0 = new PerformanceCreateRequest();
      performanceCreateRequest0.setTargetEnvName("");
      String string0 = performanceCreateRequest0.getTargetEnvName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PerformanceCreateRequest performanceCreateRequest0 = new PerformanceCreateRequest();
      performanceCreateRequest0.setTargetAppName("~`5.<!OXwfhxw%2");
      String string0 = performanceCreateRequest0.getTargetAppName();
      assertEquals("~`5.<!OXwfhxw%2", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PerformanceCreateRequest performanceCreateRequest0 = new PerformanceCreateRequest();
      performanceCreateRequest0.setTargetAppName("");
      String string0 = performanceCreateRequest0.getTargetAppName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PerformanceCreateRequest performanceCreateRequest0 = new PerformanceCreateRequest();
      performanceCreateRequest0.setServerUrl("");
      String string0 = performanceCreateRequest0.getServerUrl();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PerformanceCreateRequest performanceCreateRequest0 = new PerformanceCreateRequest();
      performanceCreateRequest0.setProjectVersion("0&:G7cjwt~");
      String string0 = performanceCreateRequest0.getProjectVersion();
      assertEquals("0&:G7cjwt~", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PerformanceCreateRequest performanceCreateRequest0 = new PerformanceCreateRequest();
      performanceCreateRequest0.setProjectVersion("");
      String string0 = performanceCreateRequest0.getProjectVersion();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PerformanceCreateRequest performanceCreateRequest0 = new PerformanceCreateRequest();
      performanceCreateRequest0.setProjectUrl("r");
      String string0 = performanceCreateRequest0.getProjectUrl();
      assertEquals("r", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PerformanceCreateRequest performanceCreateRequest0 = new PerformanceCreateRequest();
      performanceCreateRequest0.setProjectUrl("");
      String string0 = performanceCreateRequest0.getProjectUrl();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PerformanceCreateRequest performanceCreateRequest0 = new PerformanceCreateRequest();
      performanceCreateRequest0.setProjectName("!iEHBv5n)T");
      String string0 = performanceCreateRequest0.getProjectName();
      assertEquals("!iEHBv5n)T", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PerformanceCreateRequest performanceCreateRequest0 = new PerformanceCreateRequest();
      performanceCreateRequest0.setProjectName("");
      String string0 = performanceCreateRequest0.getProjectName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PerformanceCreateRequest performanceCreateRequest0 = new PerformanceCreateRequest();
      performanceCreateRequest0.setProjectId("");
      String string0 = performanceCreateRequest0.getProjectId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PerformanceCreateRequest performanceCreateRequest0 = new PerformanceCreateRequest();
      performanceCreateRequest0.setNiceName("");
      String string0 = performanceCreateRequest0.getNiceName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PerformanceCreateRequest performanceCreateRequest0 = new PerformanceCreateRequest();
      performanceCreateRequest0.setHygieiaId("");
      String string0 = performanceCreateRequest0.getHygieiaId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PerformanceCreateRequest performanceCreateRequest0 = new PerformanceCreateRequest();
      performanceCreateRequest0.setCollectorName("$[Z~\"(*_MJLR");
      String string0 = performanceCreateRequest0.getCollectorName();
      assertEquals("$[Z~\"(*_MJLR", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PerformanceCreateRequest performanceCreateRequest0 = new PerformanceCreateRequest();
      performanceCreateRequest0.setCollectorName("");
      String string0 = performanceCreateRequest0.getCollectorName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PerformanceCreateRequest performanceCreateRequest0 = new PerformanceCreateRequest();
      performanceCreateRequest0.setServerUrl("F?\"G\"'bO.");
      String string0 = performanceCreateRequest0.getServerUrl();
      assertEquals("F?\"G\"'bO.", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PerformanceCreateRequest performanceCreateRequest0 = new PerformanceCreateRequest();
      String string0 = performanceCreateRequest0.getProjectName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PerformanceCreateRequest performanceCreateRequest0 = new PerformanceCreateRequest();
      PerformanceType performanceType0 = PerformanceType.ApplicationPerformance;
      performanceCreateRequest0.setType(performanceType0);
      PerformanceType performanceType1 = performanceCreateRequest0.getType();
      assertEquals(CollectorType.AppPerformance, performanceType1.collectorType());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PerformanceCreateRequest performanceCreateRequest0 = new PerformanceCreateRequest();
      String string0 = performanceCreateRequest0.getProjectVersion();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PerformanceCreateRequest performanceCreateRequest0 = new PerformanceCreateRequest();
      long long0 = performanceCreateRequest0.getTimestamp();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PerformanceCreateRequest performanceCreateRequest0 = new PerformanceCreateRequest();
      String string0 = performanceCreateRequest0.getTargetAppName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      PerformanceCreateRequest performanceCreateRequest0 = new PerformanceCreateRequest();
      String string0 = performanceCreateRequest0.getProjectId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PerformanceCreateRequest performanceCreateRequest0 = new PerformanceCreateRequest();
      String string0 = performanceCreateRequest0.getCollectorName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PerformanceCreateRequest performanceCreateRequest0 = new PerformanceCreateRequest();
      String string0 = performanceCreateRequest0.getNiceName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      PerformanceCreateRequest performanceCreateRequest0 = new PerformanceCreateRequest();
      performanceCreateRequest0.getType();
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      PerformanceCreateRequest performanceCreateRequest0 = new PerformanceCreateRequest();
      performanceCreateRequest0.setProjectId("\":oL^y=RDOv*2>S");
      String string0 = performanceCreateRequest0.getProjectId();
      assertEquals("\":oL^y=RDOv*2>S", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      PerformanceCreateRequest performanceCreateRequest0 = new PerformanceCreateRequest();
      performanceCreateRequest0.setTimestamp((-19L));
      long long0 = performanceCreateRequest0.getTimestamp();
      assertEquals((-19L), long0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      PerformanceCreateRequest performanceCreateRequest0 = new PerformanceCreateRequest();
      performanceCreateRequest0.setHygieiaId("F?\"G\"'bO.");
      String string0 = performanceCreateRequest0.getHygieiaId();
      assertEquals("F?\"G\"'bO.", string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      PerformanceCreateRequest performanceCreateRequest0 = new PerformanceCreateRequest();
      performanceCreateRequest0.setNiceName("F?\"G\"'bO.");
      String string0 = performanceCreateRequest0.getNiceName();
      assertEquals("F?\"G\"'bO.", string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      PerformanceCreateRequest performanceCreateRequest0 = new PerformanceCreateRequest();
      Map<String, Object> map0 = performanceCreateRequest0.getMetrics();
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      PerformanceCreateRequest performanceCreateRequest0 = new PerformanceCreateRequest();
      String string0 = performanceCreateRequest0.getServerUrl();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      PerformanceCreateRequest performanceCreateRequest0 = new PerformanceCreateRequest();
      performanceCreateRequest0.setTargetEnvName("F?\"G\"'bO.");
      String string0 = performanceCreateRequest0.getTargetEnvName();
      assertEquals("F?\"G\"'bO.", string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      PerformanceCreateRequest performanceCreateRequest0 = new PerformanceCreateRequest();
      String string0 = performanceCreateRequest0.getHygieiaId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      PerformanceCreateRequest performanceCreateRequest0 = new PerformanceCreateRequest();
      String string0 = performanceCreateRequest0.getProjectUrl();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      PerformanceCreateRequest performanceCreateRequest0 = new PerformanceCreateRequest();
      String string0 = performanceCreateRequest0.getTargetEnvName();
      assertNull(string0);
  }
}
