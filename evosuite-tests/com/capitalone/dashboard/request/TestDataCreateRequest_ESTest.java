/*
 * This file was automatically generated by EvoSuite
 * Mon Jun 01 13:16:38 GMT 2020
 */

package com.capitalone.dashboard.request;

import org.junit.Test;
import static org.junit.Assert.*;
import com.capitalone.dashboard.model.TestCapability;
import com.capitalone.dashboard.model.TestSuiteType;
import com.capitalone.dashboard.request.TestDataCreateRequest;
import java.util.Collection;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TestDataCreateRequest_ESTest extends TestDataCreateRequest_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TestDataCreateRequest testDataCreateRequest0 = new TestDataCreateRequest();
      testDataCreateRequest0.setUnknownStatusCount(1410);
      int int0 = testDataCreateRequest0.getUnknownStatusCount();
      assertEquals(1410, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TestDataCreateRequest testDataCreateRequest0 = new TestDataCreateRequest();
      testDataCreateRequest0.setUnknownStatusCount((-198));
      int int0 = testDataCreateRequest0.getUnknownStatusCount();
      assertEquals((-198), int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TestDataCreateRequest testDataCreateRequest0 = new TestDataCreateRequest();
      TestSuiteType testSuiteType0 = TestSuiteType.Performance;
      testDataCreateRequest0.setType(testSuiteType0);
      TestSuiteType testSuiteType1 = testDataCreateRequest0.getType();
      assertSame(testSuiteType1, testSuiteType0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TestDataCreateRequest testDataCreateRequest0 = new TestDataCreateRequest();
      testDataCreateRequest0.setTotalCount(1);
      int int0 = testDataCreateRequest0.getTotalCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TestDataCreateRequest testDataCreateRequest0 = new TestDataCreateRequest();
      testDataCreateRequest0.setTotalCount((-1));
      int int0 = testDataCreateRequest0.getTotalCount();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TestDataCreateRequest testDataCreateRequest0 = new TestDataCreateRequest();
      testDataCreateRequest0.setTimestamp(3147L);
      long long0 = testDataCreateRequest0.getTimestamp();
      assertEquals(3147L, long0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TestDataCreateRequest testDataCreateRequest0 = new TestDataCreateRequest();
      testDataCreateRequest0.setTimestamp((-1607L));
      long long0 = testDataCreateRequest0.getTimestamp();
      assertEquals((-1607L), long0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TestDataCreateRequest testDataCreateRequest0 = new TestDataCreateRequest();
      testDataCreateRequest0.setTestJobUrl("com.capitalone.dashboard.request.TestDataCreateRequest");
      String string0 = testDataCreateRequest0.getTestJobUrl();
      assertEquals("com.capitalone.dashboard.request.TestDataCreateRequest", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TestDataCreateRequest testDataCreateRequest0 = new TestDataCreateRequest();
      testDataCreateRequest0.setTestJobUrl("");
      String string0 = testDataCreateRequest0.getTestJobUrl();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TestDataCreateRequest testDataCreateRequest0 = new TestDataCreateRequest();
      testDataCreateRequest0.setTestJobName("=DtJ&*=.J?");
      String string0 = testDataCreateRequest0.getTestJobName();
      assertEquals("=DtJ&*=.J?", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TestDataCreateRequest testDataCreateRequest0 = new TestDataCreateRequest();
      testDataCreateRequest0.setTestJobName("");
      String string0 = testDataCreateRequest0.getTestJobName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TestDataCreateRequest testDataCreateRequest0 = new TestDataCreateRequest();
      testDataCreateRequest0.setTestJobId("\"\"M`u9");
      String string0 = testDataCreateRequest0.getTestJobId();
      assertEquals("\"\"M`u9", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TestDataCreateRequest testDataCreateRequest0 = new TestDataCreateRequest();
      testDataCreateRequest0.setTestJobId("");
      String string0 = testDataCreateRequest0.getTestJobId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TestDataCreateRequest testDataCreateRequest0 = new TestDataCreateRequest();
      testDataCreateRequest0.setTargetEnvName("com.capitalone.dashboard.model.TestSuite");
      String string0 = testDataCreateRequest0.getTargetEnvName();
      assertEquals("com.capitalone.dashboard.model.TestSuite", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TestDataCreateRequest testDataCreateRequest0 = new TestDataCreateRequest();
      testDataCreateRequest0.setTargetEnvName("");
      String string0 = testDataCreateRequest0.getTargetEnvName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TestDataCreateRequest testDataCreateRequest0 = new TestDataCreateRequest();
      testDataCreateRequest0.setTargetAppName("35;>iEc27Cx");
      String string0 = testDataCreateRequest0.getTargetAppName();
      assertEquals("35;>iEc27Cx", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TestDataCreateRequest testDataCreateRequest0 = new TestDataCreateRequest();
      testDataCreateRequest0.setTargetAppName("");
      String string0 = testDataCreateRequest0.getTargetAppName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TestDataCreateRequest testDataCreateRequest0 = new TestDataCreateRequest();
      testDataCreateRequest0.setSuccessCount(3105);
      int int0 = testDataCreateRequest0.getSuccessCount();
      assertEquals(3105, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TestDataCreateRequest testDataCreateRequest0 = new TestDataCreateRequest();
      testDataCreateRequest0.setSuccessCount((-162));
      int int0 = testDataCreateRequest0.getSuccessCount();
      assertEquals((-162), int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TestDataCreateRequest testDataCreateRequest0 = new TestDataCreateRequest();
      testDataCreateRequest0.setStartTime(3773);
      long long0 = testDataCreateRequest0.getStartTime();
      assertEquals(3773L, long0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TestDataCreateRequest testDataCreateRequest0 = new TestDataCreateRequest();
      testDataCreateRequest0.setStartTime((-174L));
      long long0 = testDataCreateRequest0.getStartTime();
      assertEquals((-174L), long0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TestDataCreateRequest testDataCreateRequest0 = new TestDataCreateRequest();
      testDataCreateRequest0.setSkippedCount(321);
      int int0 = testDataCreateRequest0.getSkippedCount();
      assertEquals(321, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TestDataCreateRequest testDataCreateRequest0 = new TestDataCreateRequest();
      testDataCreateRequest0.setSkippedCount((-497));
      int int0 = testDataCreateRequest0.getSkippedCount();
      assertEquals((-497), int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      TestDataCreateRequest testDataCreateRequest0 = new TestDataCreateRequest();
      testDataCreateRequest0.setServerUrl("jJn.1nK%rxf3\";BF5z;");
      String string0 = testDataCreateRequest0.getServerUrl();
      assertEquals("jJn.1nK%rxf3\";BF5z;", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      TestDataCreateRequest testDataCreateRequest0 = new TestDataCreateRequest();
      testDataCreateRequest0.setServerUrl("");
      String string0 = testDataCreateRequest0.getServerUrl();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      TestDataCreateRequest testDataCreateRequest0 = new TestDataCreateRequest();
      testDataCreateRequest0.setNiceName("Security");
      String string0 = testDataCreateRequest0.getNiceName();
      assertEquals("Security", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      TestDataCreateRequest testDataCreateRequest0 = new TestDataCreateRequest();
      testDataCreateRequest0.setNiceName("");
      String string0 = testDataCreateRequest0.getNiceName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      TestDataCreateRequest testDataCreateRequest0 = new TestDataCreateRequest();
      testDataCreateRequest0.setFailureCount(1985);
      int int0 = testDataCreateRequest0.getFailureCount();
      assertEquals(1985, int0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      TestDataCreateRequest testDataCreateRequest0 = new TestDataCreateRequest();
      testDataCreateRequest0.setFailureCount((-6277));
      int int0 = testDataCreateRequest0.getFailureCount();
      assertEquals((-6277), int0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      TestDataCreateRequest testDataCreateRequest0 = new TestDataCreateRequest();
      testDataCreateRequest0.setExecutionId("?ug1+\"eR$");
      String string0 = testDataCreateRequest0.getExecutionId();
      assertEquals("?ug1+\"eR$", string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      TestDataCreateRequest testDataCreateRequest0 = new TestDataCreateRequest();
      testDataCreateRequest0.setExecutionId("");
      String string0 = testDataCreateRequest0.getExecutionId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      TestDataCreateRequest testDataCreateRequest0 = new TestDataCreateRequest();
      testDataCreateRequest0.setEndTime(477L);
      long long0 = testDataCreateRequest0.getEndTime();
      assertEquals(477L, long0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      TestDataCreateRequest testDataCreateRequest0 = new TestDataCreateRequest();
      testDataCreateRequest0.setEndTime((-1552));
      long long0 = testDataCreateRequest0.getEndTime();
      assertEquals((-1552L), long0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      TestDataCreateRequest testDataCreateRequest0 = new TestDataCreateRequest();
      testDataCreateRequest0.setDuration(625L);
      long long0 = testDataCreateRequest0.getDuration();
      assertEquals(625L, long0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      TestDataCreateRequest testDataCreateRequest0 = new TestDataCreateRequest();
      testDataCreateRequest0.setDuration((-1L));
      long long0 = testDataCreateRequest0.getDuration();
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      TestDataCreateRequest testDataCreateRequest0 = new TestDataCreateRequest();
      testDataCreateRequest0.setDescription("`#A8` T >");
      String string0 = testDataCreateRequest0.getDescription();
      assertEquals("`#A8` T >", string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      TestDataCreateRequest testDataCreateRequest0 = new TestDataCreateRequest();
      testDataCreateRequest0.setDescription("");
      String string0 = testDataCreateRequest0.getDescription();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      TestDataCreateRequest testDataCreateRequest0 = new TestDataCreateRequest();
      testDataCreateRequest0.setBuildArtifact("Security");
      Object object0 = testDataCreateRequest0.getBuildArtifact();
      assertEquals("Security", object0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      TestDataCreateRequest testDataCreateRequest0 = new TestDataCreateRequest();
      int int0 = testDataCreateRequest0.getSuccessCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      TestDataCreateRequest testDataCreateRequest0 = new TestDataCreateRequest();
      String string0 = testDataCreateRequest0.getTestJobName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      TestDataCreateRequest testDataCreateRequest0 = new TestDataCreateRequest();
      int int0 = testDataCreateRequest0.getTotalCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      TestDataCreateRequest testDataCreateRequest0 = new TestDataCreateRequest();
      String string0 = testDataCreateRequest0.getExecutionId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      TestDataCreateRequest testDataCreateRequest0 = new TestDataCreateRequest();
      String string0 = testDataCreateRequest0.getNiceName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      TestDataCreateRequest testDataCreateRequest0 = new TestDataCreateRequest();
      long long0 = testDataCreateRequest0.getStartTime();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      TestDataCreateRequest testDataCreateRequest0 = new TestDataCreateRequest();
      String string0 = testDataCreateRequest0.getTestJobUrl();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      TestDataCreateRequest testDataCreateRequest0 = new TestDataCreateRequest();
      long long0 = testDataCreateRequest0.getTimestamp();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      TestDataCreateRequest testDataCreateRequest0 = new TestDataCreateRequest();
      int int0 = testDataCreateRequest0.getSkippedCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      TestDataCreateRequest testDataCreateRequest0 = new TestDataCreateRequest();
      int int0 = testDataCreateRequest0.getFailureCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      TestDataCreateRequest testDataCreateRequest0 = new TestDataCreateRequest();
      Object object0 = testDataCreateRequest0.getBuildArtifact();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      TestDataCreateRequest testDataCreateRequest0 = new TestDataCreateRequest();
      String string0 = testDataCreateRequest0.getTestJobId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      TestDataCreateRequest testDataCreateRequest0 = new TestDataCreateRequest();
      String string0 = testDataCreateRequest0.getTargetAppName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      TestDataCreateRequest testDataCreateRequest0 = new TestDataCreateRequest();
      long long0 = testDataCreateRequest0.getEndTime();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      TestDataCreateRequest testDataCreateRequest0 = new TestDataCreateRequest();
      String string0 = testDataCreateRequest0.getServerUrl();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      TestDataCreateRequest testDataCreateRequest0 = new TestDataCreateRequest();
      int int0 = testDataCreateRequest0.getUnknownStatusCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      TestDataCreateRequest testDataCreateRequest0 = new TestDataCreateRequest();
      long long0 = testDataCreateRequest0.getDuration();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      TestDataCreateRequest testDataCreateRequest0 = new TestDataCreateRequest();
      testDataCreateRequest0.getType();
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      TestDataCreateRequest testDataCreateRequest0 = new TestDataCreateRequest();
      Collection<TestCapability> collection0 = testDataCreateRequest0.getTestCapabilities();
      assertNotNull(collection0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      TestDataCreateRequest testDataCreateRequest0 = new TestDataCreateRequest();
      String string0 = testDataCreateRequest0.getTargetEnvName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      TestDataCreateRequest testDataCreateRequest0 = new TestDataCreateRequest();
      String string0 = testDataCreateRequest0.getDescription();
      assertNull(string0);
  }
}
